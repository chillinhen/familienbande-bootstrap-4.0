{
	"version": 3,
	"file": "../node_modules/bootstrap/scss/sidebar.css",
	"sources": [
		"../node_modules/bootstrap/scss/sidebar.scss",
		"../../toolbox/bower_components/bourbon/_bourbon.scss",
		"../../toolbox/bower_components/bourbon/settings/_prefixer.scss",
		"../../toolbox/bower_components/bourbon/settings/_px-to-em.scss",
		"../../toolbox/bower_components/bourbon/settings/_asset-pipeline.scss",
		"../../toolbox/bower_components/bourbon/functions/_assign-inputs.scss",
		"../../toolbox/bower_components/bourbon/functions/_contains.scss",
		"../../toolbox/bower_components/bourbon/functions/_contains-falsy.scss",
		"../../toolbox/bower_components/bourbon/functions/_is-length.scss",
		"../../toolbox/bower_components/bourbon/functions/_is-light.scss",
		"../../toolbox/bower_components/bourbon/functions/_is-number.scss",
		"../../toolbox/bower_components/bourbon/functions/_is-size.scss",
		"../../toolbox/bower_components/bourbon/functions/_px-to-em.scss",
		"../../toolbox/bower_components/bourbon/functions/_px-to-rem.scss",
		"../../toolbox/bower_components/bourbon/functions/_shade.scss",
		"../../toolbox/bower_components/bourbon/functions/_strip-units.scss",
		"../../toolbox/bower_components/bourbon/functions/_tint.scss",
		"../../toolbox/bower_components/bourbon/functions/_transition-property-name.scss",
		"../../toolbox/bower_components/bourbon/functions/_unpack.scss",
		"../../toolbox/bower_components/bourbon/functions/_modular-scale.scss",
		"../../toolbox/bower_components/bourbon/helpers/_convert-units.scss",
		"../../toolbox/bower_components/bourbon/helpers/_directional-values.scss",
		"../../toolbox/bower_components/bourbon/helpers/_font-source-declaration.scss",
		"../../toolbox/bower_components/bourbon/helpers/_gradient-positions-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_linear-angle-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_linear-gradient-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_linear-positions-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_linear-side-corner-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_radial-arg-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_radial-positions-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_radial-gradient-parser.scss",
		"../../toolbox/bower_components/bourbon/helpers/_render-gradients.scss",
		"../../toolbox/bower_components/bourbon/helpers/_shape-size-stripper.scss",
		"../../toolbox/bower_components/bourbon/helpers/_str-to-num.scss",
		"../../toolbox/bower_components/bourbon/css3/_animation.scss",
		"../../toolbox/bower_components/bourbon/css3/_appearance.scss",
		"../../toolbox/bower_components/bourbon/css3/_backface-visibility.scss",
		"../../toolbox/bower_components/bourbon/css3/_background.scss",
		"../../toolbox/bower_components/bourbon/css3/_background-image.scss",
		"../../toolbox/bower_components/bourbon/css3/_border-image.scss",
		"../../toolbox/bower_components/bourbon/css3/_calc.scss",
		"../../toolbox/bower_components/bourbon/css3/_columns.scss",
		"../../toolbox/bower_components/bourbon/css3/_filter.scss",
		"../../toolbox/bower_components/bourbon/css3/_flex-box.scss",
		"../../toolbox/bower_components/bourbon/css3/_font-face.scss",
		"../../toolbox/bower_components/bourbon/css3/_font-feature-settings.scss",
		"../../toolbox/bower_components/bourbon/css3/_hidpi-media-query.scss",
		"../../toolbox/bower_components/bourbon/css3/_hyphens.scss",
		"../../toolbox/bower_components/bourbon/css3/_image-rendering.scss",
		"../../toolbox/bower_components/bourbon/css3/_keyframes.scss",
		"../../toolbox/bower_components/bourbon/css3/_linear-gradient.scss",
		"../../toolbox/bower_components/bourbon/css3/_perspective.scss",
		"../../toolbox/bower_components/bourbon/css3/_placeholder.scss",
		"../../toolbox/bower_components/bourbon/css3/_radial-gradient.scss",
		"../../toolbox/bower_components/bourbon/css3/_selection.scss",
		"../../toolbox/bower_components/bourbon/css3/_text-decoration.scss",
		"../../toolbox/bower_components/bourbon/css3/_transform.scss",
		"../../toolbox/bower_components/bourbon/css3/_transition.scss",
		"../../toolbox/bower_components/bourbon/css3/_user-select.scss",
		"../../toolbox/bower_components/bourbon/addons/_border-color.scss",
		"../../toolbox/bower_components/bourbon/addons/_border-radius.scss",
		"../../toolbox/bower_components/bourbon/addons/_border-style.scss",
		"../../toolbox/bower_components/bourbon/addons/_border-width.scss",
		"../../toolbox/bower_components/bourbon/addons/_buttons.scss",
		"../../toolbox/bower_components/bourbon/addons/_clearfix.scss",
		"../../toolbox/bower_components/bourbon/addons/_ellipsis.scss",
		"../../toolbox/bower_components/bourbon/addons/_font-stacks.scss",
		"../../toolbox/bower_components/bourbon/addons/_hide-text.scss",
		"../../toolbox/bower_components/bourbon/addons/_margin.scss",
		"../../toolbox/bower_components/bourbon/addons/_padding.scss",
		"../../toolbox/bower_components/bourbon/addons/_position.scss",
		"../../toolbox/bower_components/bourbon/addons/_prefixer.scss",
		"../../toolbox/bower_components/bourbon/addons/_retina-image.scss",
		"../../toolbox/bower_components/bourbon/addons/_size.scss",
		"../../toolbox/bower_components/bourbon/addons/_text-inputs.scss",
		"../../toolbox/bower_components/bourbon/addons/_timing-functions.scss",
		"../../toolbox/bower_components/bourbon/addons/_triangle.scss",
		"../../toolbox/bower_components/bourbon/addons/_word-wrap.scss",
		"../../toolbox/bower_components/bourbon/_bourbon-deprecated-upcoming.scss",
		"../../toolbox/external/_family.scss",
		"../../toolbox/sass/myMixins/extends.scss",
		"../../toolbox/sass/myMixins/mixins.scss",
		"../node_modules/bootstrap/scss/_functions.scss",
		"../node_modules/bootstrap/scss/_variables.scss",
		"../node_modules/bootstrap/scss/_mixins.scss",
		"../node_modules/bootstrap/scss/mixins/_breakpoints.scss",
		"../node_modules/bootstrap/scss/mixins/_hover.scss",
		"../node_modules/bootstrap/scss/mixins/_image.scss",
		"../node_modules/bootstrap/scss/mixins/_badge.scss",
		"../node_modules/bootstrap/scss/mixins/_resize.scss",
		"../node_modules/bootstrap/scss/mixins/_screen-reader.scss",
		"../node_modules/bootstrap/scss/mixins/_size.scss",
		"../node_modules/bootstrap/scss/mixins/_reset-text.scss",
		"../node_modules/bootstrap/scss/mixins/_text-emphasis.scss",
		"../node_modules/bootstrap/scss/mixins/_text-hide.scss",
		"../node_modules/bootstrap/scss/mixins/_text-truncate.scss",
		"../node_modules/bootstrap/scss/mixins/_visibility.scss",
		"../node_modules/bootstrap/scss/mixins/_alert.scss",
		"../node_modules/bootstrap/scss/mixins/_buttons.scss",
		"../node_modules/bootstrap/scss/mixins/_caret.scss",
		"../node_modules/bootstrap/scss/mixins/_pagination.scss",
		"../node_modules/bootstrap/scss/mixins/_lists.scss",
		"../node_modules/bootstrap/scss/mixins/_list-group.scss",
		"../node_modules/bootstrap/scss/mixins/_nav-divider.scss",
		"../node_modules/bootstrap/scss/mixins/_forms.scss",
		"../node_modules/bootstrap/scss/mixins/_table-row.scss",
		"../node_modules/bootstrap/scss/mixins/_background-variant.scss",
		"../node_modules/bootstrap/scss/mixins/_border-radius.scss",
		"../node_modules/bootstrap/scss/mixins/_box-shadow.scss",
		"../node_modules/bootstrap/scss/mixins/_gradients.scss",
		"../node_modules/bootstrap/scss/mixins/_transition.scss",
		"../node_modules/bootstrap/scss/mixins/_clearfix.scss",
		"../node_modules/bootstrap/scss/mixins/_grid-framework.scss",
		"../node_modules/bootstrap/scss/mixins/_grid.scss",
		"../node_modules/bootstrap/scss/mixins/_float.scss",
		"../node_modules/bootstrap/scss/_transitions.scss",
		"../node_modules/bootstrap/scss/customs/_custom_vars.scss",
		"../node_modules/bootstrap/scss/customs/_my_mixins.scss",
		"../node_modules/bootstrap/scss/customs/_custom_sidebar.scss",
		"../node_modules/bootstrap/scss/customs/_temp.scss",
		"../node_modules/bootstrap/scss/customs/_shame.scss"
	],
	"sourcesContent": [
		"/*!\r\n * Bootstrap v4.0.0 (https://getbootstrap.com)\r\n * Copyright 2011-2018 The Bootstrap Authors\r\n * Copyright 2011-2018 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n */\r\n/** play with bourbon **/\r\n@import \"../../../../toolbox/bower_components/bourbon/bourbon.scss\";\r\n/*@import \"bourbon\";*/\r\n\r\n//other external sass functions\r\n@import \"../../../../toolbox/external/_family.scss\";\r\n\r\n/*** Some individual SASS functions ***/\r\n@import \"../../../../toolbox/sass/myMixins/extends.scss\";\r\n@import \"../../../../toolbox/sass/myMixins/mixins.scss\";\r\n\r\n\r\n\r\n@import \"functions\";\r\n@import \"variables\";\r\n@import \"mixins\";\r\n\r\n/*@import \"customs/colors\";*/\r\n//@import \"root\";\r\n/*@import \"reboot\";\r\n@import \"type\";\r\n\r\n@import \"images\";\r\n@import \"code\";\r\n@import \"grid\";\r\n@import \"tables\";\r\n@import \"forms\";\r\n@import \"buttons\";*/\r\n\r\n@import \"transitions\";\r\n/*@import \"dropdown\";\r\n@import \"button-group\";\r\n@import \"input-group\";\r\n@import \"custom-forms\";\r\n\r\n@import \"nav\";\r\n@import \"navbar\";\r\n\r\n@import \"card\";\r\n@import \"breadcrumb\";\r\n@import \"pagination\";\r\n@import \"badge\";\r\n@import \"jumbotron\";\r\n@import \"alert\";\r\n@import \"progress\";\r\n@import \"media\";\r\n@import \"list-group\";\r\n@import \"close\";\r\n@import \"modal\";\r\n@import \"tooltip\";\r\n@import \"popover\";\r\n@import \"carousel\";\r\n\r\n@import \"utilities\";\r\n@import \"print\";*/\r\n\r\n//My Styles\r\n@import \"customs/custom_vars\";\r\n@import \"customs/my_mixins\";\r\n/*@import \"customs/custom_reboot\";\r\n@import \"customs/custom_type\";\r\n@import \"customs/custom_buttons\";\r\n@import \"customs/custom_forms\";\r\n@import \"customs/custom_globals\";\r\n@import \"customs/custom_nav\";\r\n@import \"customs/custom_carousel\";\r\n@import \"customs/custom_modules\";\r\n@import \"customs/custom_layout\";*/\r\n@import \"customs/custom_sidebar\";\r\n@import \"customs/temp\";\r\n// Test\r\n@import \"customs/shame\";\r\n",
		"// Bourbon 4.2.6\r\n// http://bourbon.io\r\n// Copyright 2011-2015 thoughtbot, inc.\r\n// MIT License\r\n\r\n@import \"settings/prefixer\";\r\n@import \"settings/px-to-em\";\r\n@import \"settings/asset-pipeline\";\r\n\r\n@import \"functions/assign-inputs\";\r\n@import \"functions/contains\";\r\n@import \"functions/contains-falsy\";\r\n@import \"functions/is-length\";\r\n@import \"functions/is-light\";\r\n@import \"functions/is-number\";\r\n@import \"functions/is-size\";\r\n@import \"functions/px-to-em\";\r\n@import \"functions/px-to-rem\";\r\n@import \"functions/shade\";\r\n@import \"functions/strip-units\";\r\n@import \"functions/tint\";\r\n@import \"functions/transition-property-name\";\r\n@import \"functions/unpack\";\r\n@import \"functions/modular-scale\";\r\n\r\n@import \"helpers/convert-units\";\r\n@import \"helpers/directional-values\";\r\n@import \"helpers/font-source-declaration\";\r\n@import \"helpers/gradient-positions-parser\";\r\n@import \"helpers/linear-angle-parser\";\r\n@import \"helpers/linear-gradient-parser\";\r\n@import \"helpers/linear-positions-parser\";\r\n@import \"helpers/linear-side-corner-parser\";\r\n@import \"helpers/radial-arg-parser\";\r\n@import \"helpers/radial-positions-parser\";\r\n@import \"helpers/radial-gradient-parser\";\r\n@import \"helpers/render-gradients\";\r\n@import \"helpers/shape-size-stripper\";\r\n@import \"helpers/str-to-num\";\r\n\r\n@import \"css3/animation\";\r\n@import \"css3/appearance\";\r\n@import \"css3/backface-visibility\";\r\n@import \"css3/background\";\r\n@import \"css3/background-image\";\r\n@import \"css3/border-image\";\r\n@import \"css3/calc\";\r\n@import \"css3/columns\";\r\n@import \"css3/filter\";\r\n@import \"css3/flex-box\";\r\n@import \"css3/font-face\";\r\n@import \"css3/font-feature-settings\";\r\n@import \"css3/hidpi-media-query\";\r\n@import \"css3/hyphens\";\r\n@import \"css3/image-rendering\";\r\n@import \"css3/keyframes\";\r\n@import \"css3/linear-gradient\";\r\n@import \"css3/perspective\";\r\n@import \"css3/placeholder\";\r\n@import \"css3/radial-gradient\";\r\n@import \"css3/selection\";\r\n@import \"css3/text-decoration\";\r\n@import \"css3/transform\";\r\n@import \"css3/transition\";\r\n@import \"css3/user-select\";\r\n\r\n@import \"addons/border-color\";\r\n@import \"addons/border-radius\";\r\n@import \"addons/border-style\";\r\n@import \"addons/border-width\";\r\n@import \"addons/buttons\";\r\n@import \"addons/clearfix\";\r\n@import \"addons/ellipsis\";\r\n@import \"addons/font-stacks\";\r\n@import \"addons/hide-text\";\r\n@import \"addons/margin\";\r\n@import \"addons/padding\";\r\n@import \"addons/position\";\r\n@import \"addons/prefixer\";\r\n@import \"addons/retina-image\";\r\n@import \"addons/size\";\r\n@import \"addons/text-inputs\";\r\n@import \"addons/timing-functions\";\r\n@import \"addons/triangle\";\r\n@import \"addons/word-wrap\";\r\n\r\n@import \"bourbon-deprecated-upcoming\";\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Global variables to enable or disable vendor prefixes\r\n\r\n$prefix-for-webkit:    true !default;\r\n$prefix-for-mozilla:   true !default;\r\n$prefix-for-microsoft: true !default;\r\n$prefix-for-opera:     true !default;\r\n$prefix-for-spec:      true !default;\r\n",
		"$em-base: 16px !default;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\r\n///\r\n/// @type Bool\r\n\r\n$asset-pipeline: false !default;\r\n",
		"@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list contains a value(s).\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @param {List} $values\r\n///   A single value or list of values to check for.\r\n///\r\n/// @example scss - Usage\r\n///   contains($list, $value)\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains($list, $values...) {\r\n  @each $value in $values {\r\n    @if type-of(index($list, $value)) != \"number\" {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list does not contains a value.\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains-falsy($list) {\r\n  @each $item in $list {\r\n    @if not $item {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS length.\r\n///\r\n/// @param {String} $value\r\n\r\n@function is-length($value) {\r\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\r\n       or index(auto inherit initial 0, $value)\r\n       or (type-of($value) == \"number\" and not(unitless($value))));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Programatically determines whether a color is light or dark.\r\n///\r\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\r\n///\r\n/// @param {Color (Hex)} $color\r\n///\r\n/// @example scss - Usage\r\n///   is-light($color)\r\n///\r\n/// @return {Bool}\r\n\r\n@function is-light($hex-color) {\r\n  $-local-red: red(rgba($hex-color, 1));\r\n  $-local-green: green(rgba($hex-color, 1));\r\n  $-local-blue: blue(rgba($hex-color, 1));\r\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\r\n\r\n  @return $-local-lightness > 0.6;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid number.\r\n///\r\n/// @param {Number} $value\r\n///\r\n/// @require {function} contains\r\n\r\n@function is-number($value) {\r\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS size.\r\n///\r\n/// @param {String} $value\r\n///\r\n/// @require {function} contains\r\n/// @require {function} is-length\r\n\r\n@function is-size($value) {\r\n  @return is-length($value)\r\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\r\n}\r\n",
		"// Convert pixels to ems\r\n// eg. for a relational value of 12px write em(12) when the parent is 16px\r\n// if the parent is another value say 24px write em(12, 24)\r\n\r\n@function em($pxval, $base: $em-base) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1em;\r\n}\r\n",
		"// Convert pixels to rems\r\n// eg. for a relational value of 12px write rem(12)\r\n// Assumes $em-base is the font-size of <html>\r\n\r\n@function rem($pxval) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n\r\n  $base: $em-base;\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1rem;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with black.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of black to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: shade(#ffbb52, 60%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #664a20;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function shade($color, $percent) {\r\n  @return mix(#000, $color, $percent);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Strips the unit from a number.\r\n///\r\n/// @param {Number (With Unit)} $value\r\n///\r\n/// @example scss - Usage\r\n///   $dimension: strip-units(10em);\r\n///\r\n/// @example css - CSS Output\r\n///   $dimension: 10;\r\n///\r\n/// @return {Number (Unitless)}\r\n\r\n@function strip-units($value) {\r\n  @return ($value / ($value * 0 + 1));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with white.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of white to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: tint(#6ecaa6, 40%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #a8dfc9;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function tint($color, $percent) {\r\n  @return mix(#fff, $color, $percent);\r\n}\r\n",
		"// Return vendor-prefixed property names if appropriate\r\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\r\n//************************************************************************//\r\n@function transition-property-names($props, $vendor: false) {\r\n  $new-props: ();\r\n\r\n  @each $prop in $props {\r\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\r\n  }\r\n\r\n  @return $new-props;\r\n}\r\n\r\n@function transition-property-name($prop, $vendor: false) {\r\n  // put other properties that need to be prefixed here aswell\r\n  @if $vendor and $prop == transform {\r\n    @return unquote('-'+$vendor+'-'+$prop);\r\n  }\r\n  @else {\r\n    @return $prop;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Converts shorthand to the 4-value syntax.\r\n///\r\n/// @param {List} $shorthand\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     margin: unpack(1em 2em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin: 1em 2em 1em 2em;\r\n///   }\r\n\r\n@function unpack($shorthand) {\r\n  @if length($shorthand) == 1 {\r\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\r\n  } @else if length($shorthand) == 2 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\r\n  } @else if length($shorthand) == 3 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\r\n  } @else {\r\n    @return $shorthand;\r\n  }\r\n}\r\n",
		"// Scaling Variables\r\n$golden:           1.618;\r\n$minor-second:     1.067;\r\n$major-second:     1.125;\r\n$minor-third:      1.2;\r\n$major-third:      1.25;\r\n$perfect-fourth:   1.333;\r\n$augmented-fourth: 1.414;\r\n$perfect-fifth:    1.5;\r\n$minor-sixth:      1.6;\r\n$major-sixth:      1.667;\r\n$minor-seventh:    1.778;\r\n$major-seventh:    1.875;\r\n$octave:           2;\r\n$major-tenth:      2.5;\r\n$major-eleventh:   2.667;\r\n$major-twelfth:    3;\r\n$double-octave:    4;\r\n\r\n$modular-scale-ratio: $perfect-fourth !default;\r\n$modular-scale-base: em($em-base) !default;\r\n\r\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\r\n  $v1: nth($value, 1);\r\n  $v2: nth($value, length($value));\r\n  $value: $v1;\r\n\r\n  // scale $v2 to just above $v1\r\n  @while $v2 > $v1 {\r\n    $v2: ($v2 / $ratio); // will be off-by-1\r\n  }\r\n  @while $v2 < $v1 {\r\n    $v2: ($v2 * $ratio); // will fix off-by-1\r\n  }\r\n\r\n  // check AFTER scaling $v2 to prevent double-counting corner-case\r\n  $double-stranded: $v2 > $v1;\r\n\r\n  @if $increment > 0 {\r\n    @for $i from 1 through $increment {\r\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 * $ratio);\r\n      } @else {\r\n        $v1: ($v1 * $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $increment < 0 {\r\n    // adjust $v2 to just below $v1\r\n    @if $double-stranded {\r\n      $v2: ($v2 / $ratio);\r\n    }\r\n\r\n    @for $i from $increment through -1 {\r\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 / $ratio);\r\n      } @else {\r\n        $v1: ($v1 / $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for str-to-num fn.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _convert-units($number, $unit) {\r\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\r\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\r\n  $index: index($strings, $unit);\r\n\r\n  @if not $index {\r\n    @warn \"Unknown unit `#{$unit}`.\";\r\n    @return false;\r\n  }\r\n\r\n  @if type-of($number) != \"number\" {\r\n    @warn \"`#{$number} is not a number`\";\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Directional-property mixins are shorthands for writing properties like the following\r\n///\r\n/// @ignore You can also use `false` instead of `null`.\r\n///\r\n/// @param {List} $vals\r\n///   List of directional values\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dotted null);\r\n///     @include margin(null 0 10px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: dotted;\r\n///     border-top-style: dotted;\r\n///     margin-bottom: 10px;\r\n///     margin-left: 0;\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n/// @require {function} contains-falsy\r\n///\r\n/// @return {List}\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $a: nth($vals, 1);\r\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\r\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\r\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\r\n\r\n  @if $a == 0 { $a: 0; }\r\n  @if $b == 0 { $b: 0; }\r\n  @if $c == 0 { $c: 0; }\r\n  @if $d == 0 { $d: 0; }\r\n\r\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\r\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\r\n  @else if $b == $d                      { $output: $a $b $c;    }\r\n  @else                                  { $output: $a $b $c $d; }\r\n\r\n  @return $output;\r\n}\r\n\r\n/// Output directional properties, for instance `margin`.\r\n///\r\n/// @access private\r\n///\r\n/// @param {String} $pre\r\n///   Prefix to use\r\n/// @param {String} $suf\r\n///   Suffix to use\r\n/// @param {List} $vals\r\n///   List of values\r\n///\r\n/// @require {function} collapse-directionals\r\n/// @require {function} contains-falsy\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n",
		"// Used for creating the source string for fonts using @font-face\r\n// Reference: http://goo.gl/Ru1bKP\r\n\r\n@function font-url-prefixer($asset-pipeline) {\r\n  @if $asset-pipeline == true {\r\n    @return font-url;\r\n  } @else {\r\n    @return url;\r\n  }\r\n}\r\n\r\n@function font-source-declaration(\r\n  $font-family,\r\n  $file-path,\r\n  $asset-pipeline,\r\n  $file-formats,\r\n  $font-url) {\r\n\r\n  $src: ();\r\n\r\n  $formats-map: (\r\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\r\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\r\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\r\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\r\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\r\n  );\r\n\r\n  @each $key, $values in $formats-map {\r\n    @if contains($file-formats, $key) {\r\n      $file-path: nth($values, 1);\r\n      $font-format: nth($values, 2);\r\n\r\n      @if $asset-pipeline == true {\r\n        $src: append($src, font-url($file-path) $font-format, comma);\r\n      } @else {\r\n        $src: append($src, url($file-path) $font-format, comma);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $src;\r\n}\r\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\r\n  @if $gradient-positions\r\n  and ($gradient-type == linear)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _linear-positions-parser($gradient-positions);\r\n  }\r\n  @else if $gradient-positions\r\n  and ($gradient-type == radial)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _radial-positions-parser($gradient-positions);\r\n  }\r\n  @return $gradient-positions;\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\r\n  $offset: null;\r\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\r\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\r\n\r\n  @if ($unit-long == \"grad\") or\r\n      ($unit-long == \"turn\") {\r\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\r\n  }\r\n\r\n  @else if ($unit-short == \"deg\") or\r\n           ($unit-short == \"rad\") {\r\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\r\n  }\r\n\r\n  @if $offset {\r\n    $num: _str-to-num($first-val);\r\n\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n}\r\n",
		"@function _linear-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $has-multiple-vals: str-index($first-val, \" \");\r\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\r\n  $has-angle: is-number(str-slice($first-val, 1, 1));\r\n\r\n  @if $has-multiple-vals {\r\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\r\n  }\r\n\r\n  @else if $has-single-position != \"\" {\r\n    $pos: unquote($has-single-position + \"\");\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n\r\n  @else if $has-angle {\r\n    // Rotate degree for webkit\r\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"@function _linear-positions-parser($pos) {\r\n  $type: type-of(nth($pos, 1));\r\n  $spec: null;\r\n  $degree: null;\r\n  $side: null;\r\n  $corner: null;\r\n  $length: length($pos);\r\n  // Parse Side and corner positions\r\n  @if ($length > 1) {\r\n    @if nth($pos, 1) == \"to\" { // Newer syntax\r\n      $side: nth($pos, 2);\r\n\r\n      @if $length == 2 { // eg. to top\r\n        // Swap for backwards compatibility\r\n        $degree: _position-flipper(nth($pos, 2));\r\n      }\r\n      @else if $length == 3 { // eg. to top left\r\n        $corner: nth($pos, 3);\r\n      }\r\n    }\r\n    @else if $length == 2 { // Older syntax (\"top left\")\r\n      $side: _position-flipper(nth($pos, 1));\r\n      $corner: _position-flipper(nth($pos, 2));\r\n    }\r\n\r\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    $spec: to $side $corner;\r\n  }\r\n  @else if $length == 1 {\r\n    // Swap for backwards compatibility\r\n    @if $type == string {\r\n      $degree: $pos;\r\n      $spec: to _position-flipper($pos);\r\n    }\r\n    @else {\r\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\r\n      $spec: $pos;\r\n    }\r\n  }\r\n  $degree: unquote($degree + \",\");\r\n  $spec:   unquote($spec + \",\");\r\n  @return $degree $spec;\r\n}\r\n\r\n@function _position-flipper($pos) {\r\n  @return if($pos == left, right, null)\r\n         if($pos == right, left, null)\r\n         if($pos == top, bottom, null)\r\n         if($pos == bottom, top, null);\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\r\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\r\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\r\n  $val-3: null;\r\n  $has-val-3: str-index($val-2, \" \");\r\n\r\n  @if $has-val-3 {\r\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\r\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\r\n  }\r\n\r\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\r\n  $pos: unquote($pos + \"\");\r\n\r\n  // Use old spec for webkit\r\n  @if $val-1 == \"to\" {\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  // Bring the code up to spec\r\n  @else {\r\n    @return (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n}\r\n",
		"@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\r\n  @each $value in $g1, $g2 {\r\n    $first-val: nth($value, 1);\r\n    $pos-type:  type-of($first-val);\r\n    $spec-at-index: null;\r\n\r\n    // Determine if spec was passed to mixin\r\n    @if type-of($value) == list {\r\n      $spec-at-index: if(index($value, at), index($value, at), false);\r\n    }\r\n    @if $spec-at-index {\r\n      @if $spec-at-index > 1 {\r\n        @for $i from 1 through ($spec-at-index - 1) {\r\n          $shape-size: $shape-size nth($value, $i);\r\n        }\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      @else if $spec-at-index == 1 {\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      $g1: null;\r\n    }\r\n\r\n    // If not spec calculate correct values\r\n    @else {\r\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\r\n        @if ($pos-type == number)\r\n        or ($first-val == \"center\")\r\n        or ($first-val == \"top\")\r\n        or ($first-val == \"right\")\r\n        or ($first-val == \"bottom\")\r\n        or ($first-val == \"left\") {\r\n\r\n          $pos: $value;\r\n\r\n          @if $pos == $g1 {\r\n            $g1: null;\r\n          }\r\n        }\r\n\r\n        @else if\r\n           ($first-val == \"ellipse\")\r\n        or ($first-val == \"circle\")\r\n        or ($first-val == \"closest-side\")\r\n        or ($first-val == \"closest-corner\")\r\n        or ($first-val == \"farthest-side\")\r\n        or ($first-val == \"farthest-corner\")\r\n        or ($first-val == \"contain\")\r\n        or ($first-val == \"cover\") {\r\n\r\n          $shape-size: $value;\r\n\r\n          @if $value == $g1 {\r\n            $g1: null;\r\n          }\r\n\r\n          @else if $value == $g2 {\r\n            $g2: null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @return $g1, $g2, $pos, $shape-size;\r\n}\r\n",
		"@function _radial-positions-parser($gradient-pos) {\r\n  $shape-size: nth($gradient-pos, 1);\r\n  $pos:        nth($gradient-pos, 2);\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\r\n             unquote(if($shape-size, \"#{$shape-size},\", null));\r\n  $pos-spec: if($pos, \"at #{$pos}\", null);\r\n\r\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\r\n\r\n  // Add comma\r\n  @if ($spec != \"  \") {\r\n    $spec: \"#{$spec},\";\r\n  }\r\n\r\n  @return $pre-spec $spec;\r\n}\r\n",
		"@function _radial-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $is-spec-syntax: str-index($first-val, \"at\");\r\n\r\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\r\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n    $pos: append($pos, $keyword, comma);\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if $is-spec-syntax == 1 {\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\r\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\r\n\r\n    $gradients: (\r\n      webkit-image: null,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"// User for linear and radial gradients within background-image or border-image properties\r\n\r\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\r\n  $pre-spec: null;\r\n  $spec: null;\r\n  $vendor-gradients: null;\r\n  @if $gradient-type == linear {\r\n    @if $gradient-positions {\r\n      $pre-spec: nth($gradient-positions, 1);\r\n      $spec:     nth($gradient-positions, 2);\r\n    }\r\n  }\r\n  @else if $gradient-type == radial {\r\n    $pre-spec: nth($gradient-positions, 1);\r\n    $spec:     nth($gradient-positions, 2);\r\n  }\r\n\r\n  @if $vendor {\r\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\r\n  }\r\n  @else if $vendor == false {\r\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\r\n    $vendor-gradients: unquote($vendor-gradients);\r\n  }\r\n  @return $vendor-gradients;\r\n}\r\n",
		"@function _shape-size-stripper($shape-size) {\r\n  $shape-size-spec: null;\r\n  @each $value in $shape-size {\r\n    @if ($value == \"cover\") or ($value == \"contain\") {\r\n      $value: null;\r\n    }\r\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\r\n  }\r\n  @return $shape-size-spec;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for linear/radial-gradient-parsers.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _str-to-num($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    }\r\n\r\n    @else if $character == \".\" {\r\n      $divider: 1;\r\n    }\r\n\r\n    @else {\r\n      @if not $index {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _convert-units($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      }\r\n\r\n      @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\r\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\r\n\r\n@mixin animation($animations...) {\r\n  @include prefixer(animation, $animations, webkit moz spec);\r\n}\r\n\r\n@mixin animation-name($names...) {\r\n  @include prefixer(animation-name, $names, webkit moz spec);\r\n}\r\n\r\n@mixin animation-duration($times...) {\r\n  @include prefixer(animation-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out\r\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-iteration-count($values...) {\r\n  // infinite | <number>\r\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\r\n}\r\n\r\n@mixin animation-direction($directions...) {\r\n  // normal | alternate\r\n  @include prefixer(animation-direction, $directions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-play-state($states...) {\r\n  // running | paused\r\n  @include prefixer(animation-play-state, $states, webkit moz spec);\r\n}\r\n\r\n@mixin animation-delay($times...) {\r\n  @include prefixer(animation-delay, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-fill-mode($modes...) {\r\n  // none | forwards | backwards | both\r\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\r\n}\r\n",
		"@mixin appearance($value) {\r\n  @include prefixer(appearance, $value, webkit moz ms o spec);\r\n}\r\n",
		"@mixin backface-visibility($visibility) {\r\n  @include prefixer(backface-visibility, $visibility, webkit spec);\r\n}\r\n",
		"//************************************************************************//\r\n// Background property for adding multiple backgrounds using shorthand\r\n// notation.\r\n//************************************************************************//\r\n\r\n@mixin background($backgrounds...) {\r\n  $webkit-backgrounds: ();\r\n  $spec-backgrounds: ();\r\n\r\n  @each $background in $backgrounds {\r\n    $webkit-background: ();\r\n    $spec-background: ();\r\n    $background-type: type-of($background);\r\n\r\n    @if $background-type == string or $background-type == list {\r\n      $background-str: if($background-type == list, nth($background, 1), $background);\r\n\r\n      $url-str:       str-slice($background-str, 1, 3);\r\n      $gradient-type: str-slice($background-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-background: $background;\r\n      $spec-background:   $background;\r\n    }\r\n\r\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\r\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\r\n  }\r\n\r\n  background: $webkit-backgrounds;\r\n  background: $spec-backgrounds;\r\n}\r\n",
		"//************************************************************************//\r\n// Background-image property for adding multiple background images with\r\n// gradients, or for stringing multiple gradients together.\r\n//************************************************************************//\r\n\r\n@mixin background-image($images...) {\r\n  $webkit-images: ();\r\n  $spec-images: ();\r\n\r\n  @each $image in $images {\r\n    $webkit-image: ();\r\n    $spec-image: ();\r\n\r\n    @if (type-of($image) == string) {\r\n      $url-str:       str-slice($image, 1, 3);\r\n      $gradient-type: str-slice($image, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-image: $image;\r\n        $spec-image:   $image;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser($image);\r\n        $webkit-image:  map-get($gradients, webkit-image);\r\n        $spec-image:    map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser($image);\r\n        $webkit-image: map-get($gradients, webkit-image);\r\n        $spec-image:   map-get($gradients, spec-image);\r\n      }\r\n    }\r\n\r\n    $webkit-images: append($webkit-images, $webkit-image, comma);\r\n    $spec-images:   append($spec-images,   $spec-image,   comma);\r\n  }\r\n\r\n  background-image: $webkit-images;\r\n  background-image: $spec-images;\r\n}\r\n",
		"@mixin border-image($borders...) {\r\n  $webkit-borders: ();\r\n  $spec-borders: ();\r\n\r\n  @each $border in $borders {\r\n    $webkit-border: ();\r\n    $spec-border: ();\r\n    $border-type: type-of($border);\r\n\r\n    @if $border-type == string or list {\r\n      $border-str: if($border-type == list, nth($border, 1), $border);\r\n\r\n      $url-str:       str-slice($border-str, 1, 3);\r\n      $gradient-type: str-slice($border-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-border: $border;\r\n      $spec-border:   $border;\r\n    }\r\n\r\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\r\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\r\n  }\r\n\r\n  -webkit-border-image: $webkit-borders;\r\n          border-image: $spec-borders;\r\n          border-style: solid;\r\n}\r\n\r\n//Examples:\r\n// @include border-image(url(\"image.png\"));\r\n// @include border-image(url(\"image.png\") 20 stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow));\r\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\r\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\r\n",
		"@mixin calc($property, $value) {\r\n  #{$property}: -webkit-calc(#{$value});\r\n  #{$property}: calc(#{$value});\r\n}\r\n",
		"@mixin columns($arg: auto) {\r\n  // <column-count> || <column-width>\r\n  @include prefixer(columns, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n  // auto || integer\r\n  @include prefixer(column-count, $int, webkit moz spec);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n  // normal || length\r\n  @include prefixer(column-gap, $length, webkit moz spec);\r\n}\r\n\r\n@mixin column-fill($arg: auto) {\r\n  // auto || length\r\n  @include prefixer(column-fill, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule($arg) {\r\n  // <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz spec);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n  // none || all\r\n  @include prefixer(column-span, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n  // auto || length\r\n  @include prefixer(column-width, $length, webkit moz spec);\r\n}\r\n",
		"@mixin filter($function: none) {\r\n  // <filter-function> [<filter-function]* | none\r\n  @include prefixer(filter, $function, webkit spec);\r\n}\r\n",
		"// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n// flex | inline-flex\r\n  @if $value == \"flex\" {\r\n    // 2009\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n\r\n    // 2012\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flexbox; // 2011 (IE 10)\r\n    display: flex;\r\n  } @else if $value == \"inline-flex\" {\r\n    display: -webkit-inline-box;\r\n    display: -moz-inline-box;\r\n    display: inline-box;\r\n\r\n    display: -webkit-inline-flex;\r\n    display: -moz-inline-flex;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n  } @else {\r\n    display: $value;\r\n  }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n  // Grab flex-grow for older browsers.\r\n  $flex-grow: nth($value, 1);\r\n\r\n  // 2009\r\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n  // 2011 (IE 10), 2012\r\n  @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)\r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n  // Alt values.\r\n  $value-2009: $value;\r\n  $value-2011: $value;\r\n  $direction: normal;\r\n\r\n  @if $value == row {\r\n    $value-2009: horizontal;\r\n  } @else if $value == \"row-reverse\" {\r\n    $value-2009: horizontal;\r\n    $direction: reverse;\r\n  } @else if $value == column {\r\n    $value-2009: vertical;\r\n  } @else if $value == \"column-reverse\" {\r\n    $value-2009: vertical;\r\n    $direction: reverse;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n  // Alt values\r\n  $alt-value: $value;\r\n  @if $value == nowrap {\r\n    $alt-value: single;\r\n  } @else if $value == wrap {\r\n    $alt-value: multiple;\r\n  } @else if $value == \"wrap-reverse\" {\r\n    $alt-value: multiple;\r\n  }\r\n\r\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n  @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n  // 2009\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(order, $int, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n  @include prefixer(flex-grow, $number, webkit moz spec);\r\n  -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n  @include prefixer(flex-shrink, $number, webkit moz spec);\r\n  -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n  @include prefixer(flex-basis, $width, webkit moz spec);\r\n  -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content($value: flex-start) {\r\n\r\n  // Alt values.\r\n  $alt-value: $value;\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  } @else if $value == \"space-between\" {\r\n    $alt-value: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $alt-value: distribute;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n  $alt-value: $value;\r\n\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(align-items, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-align: $alt-value;\r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  } @else if $value == \"space-between\" {\r\n    $value-2011: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $value-2011: distribute;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-line-pack: $value-2011;\r\n}\r\n",
		"@mixin font-face(\r\n  $font-family,\r\n  $file-path,\r\n  $weight: normal,\r\n  $style: normal,\r\n  $asset-pipeline: $asset-pipeline,\r\n  $file-formats: eot woff2 woff ttf svg) {\r\n\r\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\r\n\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n\r\n    src: font-source-declaration(\r\n      $font-family,\r\n      $file-path,\r\n      $asset-pipeline,\r\n      $file-formats,\r\n      $font-url-prefix\r\n    );\r\n  }\r\n}\r\n",
		"@mixin font-feature-settings($settings...) {\r\n  @if length($settings) == 0 { $settings: none; }\r\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\r\n}\r\n",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\r\n@mixin hidpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min--moz-device-pixel-ratio: $ratio),\r\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n  only screen and (min-resolution: round($ratio * 96dpi)),\r\n  only screen and (min-resolution: $ratio * 1dppx) {\r\n    @content;\r\n  }\r\n}\r\n",
		"@mixin hyphens($hyphenation: none) {\r\n  // none | manual | auto\r\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\r\n}\r\n",
		"@mixin image-rendering ($mode:auto) {\r\n\r\n  @if ($mode == crisp-edges) {\r\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\r\n    image-rendering: -moz-crisp-edges;\r\n    image-rendering: -o-crisp-edges;\r\n    image-rendering: -webkit-optimize-contrast;\r\n    image-rendering: crisp-edges;\r\n  }\r\n\r\n  @else {\r\n    image-rendering: $mode;\r\n  }\r\n}\r\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\r\n@mixin keyframes($name) {\r\n  $original-prefix-for-webkit:    $prefix-for-webkit;\r\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\r\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\r\n  $original-prefix-for-opera:     $prefix-for-opera;\r\n  $original-prefix-for-spec:      $prefix-for-spec;\r\n\r\n  @if $original-prefix-for-webkit {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-webkit: true !global;\r\n    @-webkit-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $original-prefix-for-mozilla {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-mozilla: true !global;\r\n    @-moz-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\r\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\r\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\r\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\r\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\r\n\r\n  @if $original-prefix-for-spec {\r\n    @keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin linear-gradient($pos, $g1, $g2: null,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $fallback: null) {\r\n  // Detect what type of value exists in $pos\r\n  $pos-type: type-of(nth($pos, 1));\r\n  $pos-spec: null;\r\n  $pos-degree: null;\r\n\r\n  // If $pos is missing from mixin, reassign vars and add default position\r\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\r\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\r\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\r\n    $pos: null;\r\n  }\r\n\r\n  @if $pos {\r\n    $positions: _linear-positions-parser($pos);\r\n    $pos-degree: nth($positions, 1);\r\n    $pos-spec:   nth($positions, 2);\r\n  }\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Set $g1 as the default fallback color\r\n  $fallback-color: nth($g1, 1);\r\n\r\n  // If $fallback is a color use that color as the fallback color\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  background-color: $fallback-color;\r\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\r\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\r\n}\r\n",
		"@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth, webkit moz spec);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  @include prefixer(perspective-origin, $value, webkit moz spec);\r\n}\r\n",
		"@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"// Requires Sass 3.1+\r\n@mixin radial-gradient($g1, $g2,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $pos: null,\r\n                       $shape-size: null,\r\n                       $fallback: null) {\r\n\r\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\r\n  $g1:  nth($data, 1);\r\n  $g2:  nth($data, 2);\r\n  $pos: nth($data, 3);\r\n  $shape-size: nth($data, 4);\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Strip deprecated cover/contain for spec\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  // Set $g1 as the default fallback color\r\n  $first-color: nth($full, 1);\r\n  $fallback-color: nth($first-color, 1);\r\n\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  // Add Commas and spaces\r\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\r\n  $pos:        if($pos, \"#{$pos}, \", null);\r\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\r\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\r\n\r\n  background-color:  $fallback-color;\r\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\r\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin text-decoration($value) {\r\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\r\n  @include prefixer(text-decoration, $value, moz);\r\n}\r\n\r\n@mixin text-decoration-line($line: none) {\r\n// none || underline || overline || line-through\r\n  @include prefixer(text-decoration-line, $line, moz);\r\n}\r\n\r\n@mixin text-decoration-style($style: solid) {\r\n// solid || double || dotted || dashed || wavy\r\n  @include prefixer(text-decoration-style, $style, moz webkit);\r\n}\r\n\r\n@mixin text-decoration-color($color: currentColor) {\r\n// currentColor || <color>\r\n  @include prefixer(text-decoration-color, $color, moz);\r\n}\r\n",
		"@mixin transform($property: none) {\r\n  // none | <transform-function>\r\n  @include prefixer(transform, $property, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-origin($axes: 50%) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  // z-axis -                          length\r\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-style($style: flat) {\r\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\r\n}\r\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\r\n// Example: @include transition (all 2s ease-in-out);\r\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\r\n//          @include transition-property (transform, opacity);\r\n\r\n@mixin transition($properties...) {\r\n  // Fix for vendor-prefix transform property\r\n  $needs-prefixes: false;\r\n  $webkit: ();\r\n  $moz: ();\r\n  $spec: ();\r\n\r\n  // Create lists for vendor-prefixed transform\r\n  @each $list in $properties {\r\n    @if nth($list, 1) == \"transform\" {\r\n      $needs-prefixes: true;\r\n      $list1: -webkit-transform;\r\n      $list2: -moz-transform;\r\n      $list3: ();\r\n\r\n      @each $var in $list {\r\n        $list3: join($list3, $var);\r\n\r\n        @if $var != \"transform\" {\r\n          $list1: join($list1, $var);\r\n          $list2: join($list2, $var);\r\n        }\r\n      }\r\n\r\n      $webkit: append($webkit, $list1);\r\n      $moz:    append($moz,    $list2);\r\n      $spec:   append($spec,   $list3);\r\n    } @else {\r\n      $webkit: append($webkit, $list, comma);\r\n      $moz:    append($moz,    $list, comma);\r\n      $spec:   append($spec,   $list, comma);\r\n    }\r\n  }\r\n\r\n  @if $needs-prefixes {\r\n    -webkit-transition: $webkit;\r\n       -moz-transition: $moz;\r\n            transition: $spec;\r\n  } @else {\r\n    @if length($properties) >= 1 {\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    } @else {\r\n      $properties: all 0.15s ease-out 0s;\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin transition-property($properties...) {\r\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\r\n     -moz-transition-property: transition-property-names($properties, \"moz\");\r\n          transition-property: transition-property-names($properties, false);\r\n}\r\n\r\n@mixin transition-duration($times...) {\r\n  @include prefixer(transition-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin transition-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\r\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin transition-delay($times...) {\r\n  @include prefixer(transition-delay, $times, webkit moz spec);\r\n}\r\n",
		"@mixin user-select($value: none) {\r\n  @include prefixer(user-select, $value, webkit moz ms spec);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-left-color: #e8ae1a;\r\n///     border-right-color: #76cd9c;\r\n///     border-top-color: #a60b55;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-color`\r\n\r\n@mixin border-color($vals...) {\r\n  @include directional-property(border, color, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\r\n///\r\n/// @param {Number} $radii\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element-one {\r\n///     @include border-top-radius(5px);\r\n///   }\r\n///\r\n///   .element-two {\r\n///     @include border-left-radius(3px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element-one {\r\n///     border-top-left-radius: 5px;\r\n///     border-top-right-radius: 5px;\r\n///   }\r\n///\r\n///   .element-two {\r\n///     border-bottom-left-radius: 3px;\r\n///     border-top-left-radius: 3px;\r\n///   }\r\n///\r\n/// @output `border-radius`\r\n\r\n@mixin border-top-radius($radii) {\r\n  border-top-left-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  border-bottom-right-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-bottom-right-radius: $radii;\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-top-left-radius: $radii;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dashed null solid);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: solid;\r\n///     border-top-style: dashed;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-style`\r\n\r\n@mixin border-style($vals...) {\r\n  @include directional-property(border, style, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-width(1em null 20px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-width: 20px;\r\n///     border-top-width: 1em;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-width`\r\n\r\n@mixin border-width($vals...) {\r\n  @include directional-property(border, width, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-buttons} {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   #{$all-buttons-focus},\r\n///   #{$all-buttons-hover} {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   #{$all-buttons-active} {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   button,\r\n///   input[type=\"button\"],\r\n///   input[type=\"reset\"],\r\n///   input[type=\"submit\"] {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   button:focus,\r\n///   input[type=\"button\"]:focus,\r\n///   input[type=\"reset\"]:focus,\r\n///   input[type=\"submit\"]:focus,\r\n///   button:hover,\r\n///   input[type=\"button\"]:hover,\r\n///   input[type=\"reset\"]:hover,\r\n///   input[type=\"submit\"]:hover {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   button:active,\r\n///   input[type=\"button\"]:active,\r\n///   input[type=\"reset\"]:active,\r\n///   input[type=\"submit\"]:active {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n///\r\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\r\n\r\n$buttons-list: 'button',\r\n               'input[type=\"button\"]',\r\n               'input[type=\"reset\"]',\r\n               'input[type=\"submit\"]';\r\n\r\n$all-buttons:        assign-inputs($buttons-list);\r\n$all-buttons-active: assign-inputs($buttons-list, active);\r\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\r\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\r\n\r\n$all-button-inputs:        $all-buttons;\r\n$all-button-inputs-active: $all-buttons-active;\r\n$all-button-inputs-focus:  $all-buttons-focus;\r\n$all-button-inputs-hover:  $all-buttons-hover;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to include a clearfix for containing floats.\r\n///\r\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include clearfix;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::after {\r\n///     clear: both;\r\n///     content: \"\";\r\n///     display: table;\r\n///   }\r\n\r\n@mixin clearfix {\r\n  &::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Truncates text and adds an ellipsis to represent overflow.\r\n///\r\n/// @param {Number} $width [100%]\r\n///   Max-width for the string to respect before being truncated\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include ellipsis;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     display: inline-block;\r\n///     max-width: 100%;\r\n///     overflow: hidden;\r\n///     text-overflow: ellipsis;\r\n///     white-space: nowrap;\r\n///     word-wrap: normal;\r\n///   }\r\n\r\n@mixin ellipsis($width: 100%) {\r\n  display: inline-block;\r\n  max-width: $width;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-wrap: normal;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Georgia font stack.\r\n///\r\n/// @type List\r\n\r\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\r\n\r\n/// Helvetica font stack.\r\n///\r\n/// @type List\r\n\r\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\r\n\r\n/// Lucida Grande font stack.\r\n///\r\n/// @type List\r\n\r\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\r\n\r\n/// Monospace font stack.\r\n///\r\n/// @type List\r\n\r\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\r\n\r\n/// Verdana font stack.\r\n///\r\n/// @type List\r\n\r\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\r\n",
		"/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n/// @todo Remove height argument in v5.0.0\r\n\r\n@mixin hide-text($height: null) {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n\r\n  @if $height {\r\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include margin(null 10px 3em 20vh);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin-bottom: 3em;\r\n///     margin-left: 20vh;\r\n///     margin-right: 10px;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `margin`\r\n\r\n@mixin margin($vals...) {\r\n  @include directional-property(margin, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include padding(12vh null 10px 5%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     padding-bottom: 10px;\r\n///     padding-left: 5%;\r\n///     padding-top: 12vh;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `padding`\r\n\r\n@mixin padding($vals...) {\r\n  @include directional-property(padding, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Position} $position [relative]\r\n///   A CSS position value\r\n///\r\n/// @param {Arglist} $coordinates [null null null null]\r\n///   List of values that correspond to the 4-value syntax for the edges of a box\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include position(absolute, 0 null null 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     left: 10em;\r\n///     position: absolute;\r\n///     top: 0;\r\n///   }\r\n///\r\n/// @require {function} is-length\r\n/// @require {function} unpack\r\n\r\n@mixin position($position: relative, $coordinates: null null null null) {\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $offsets: (\r\n    top:    nth($coordinates, 1),\r\n    right:  nth($coordinates, 2),\r\n    bottom: nth($coordinates, 3),\r\n    left:   nth($coordinates, 4)\r\n  );\r\n\r\n  position: $position;\r\n\r\n  @each $offset, $value in $offsets {\r\n    @if is-length($value) {\r\n      #{$offset}: $value;\r\n    }\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\r\n  @if $asset-pipeline {\r\n    background-image: image-url(\"#{$filename}.#{$extension}\");\r\n  } @else {\r\n    background-image:       url(\"#{$filename}.#{$extension}\");\r\n  }\r\n\r\n  @include hidpi {\r\n    @if $asset-pipeline {\r\n      @if $retina-filename {\r\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    } @else {\r\n      @if $retina-filename {\r\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    background-size: $background-size;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Sets the `width` and `height` of the element.\r\n///\r\n/// @param {List} $size\r\n///   A list of at most 2 size values.\r\n///\r\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\r\n///\r\n/// @example scss - Usage\r\n///   .first-element {\r\n///     @include size(2em);\r\n///   }\r\n///\r\n///   .second-element {\r\n///     @include size(auto 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .first-element {\r\n///     width: 2em;\r\n///     height: 2em;\r\n///   }\r\n///\r\n///   .second-element {\r\n///     width: auto;\r\n///     height: 10em;\r\n///   }\r\n///\r\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\r\n\r\n@mixin size($value) {\r\n  $width: nth($value, 1);\r\n  $height: $width;\r\n\r\n  @if length($value) > 1 {\r\n    $height: nth($value, 2);\r\n  }\r\n\r\n  @if is-size($height) {\r\n    height: $height;\r\n  } @else {\r\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\r\n  }\r\n\r\n  @if is-size($width) {\r\n    width: $width;\r\n  } @else {\r\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-text-inputs} {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-focus},\r\n///   #{$all-text-inputs-hover} {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-active} {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   input[type=\"color\"],\r\n///   input[type=\"date\"],\r\n///   input[type=\"datetime\"],\r\n///   input[type=\"datetime-local\"],\r\n///   input[type=\"email\"],\r\n///   input[type=\"month\"],\r\n///   input[type=\"number\"],\r\n///   input[type=\"password\"],\r\n///   input[type=\"search\"],\r\n///   input[type=\"tel\"],\r\n///   input[type=\"text\"],\r\n///   input[type=\"time\"],\r\n///   input[type=\"url\"],\r\n///   input[type=\"week\"],\r\n///   textarea {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:focus,\r\n///   input[type=\"date\"]:focus,\r\n///   input[type=\"datetime\"]:focus,\r\n///   input[type=\"datetime-local\"]:focus,\r\n///   input[type=\"email\"]:focus,\r\n///   input[type=\"month\"]:focus,\r\n///   input[type=\"number\"]:focus,\r\n///   input[type=\"password\"]:focus,\r\n///   input[type=\"search\"]:focus,\r\n///   input[type=\"tel\"]:focus,\r\n///   input[type=\"text\"]:focus,\r\n///   input[type=\"time\"]:focus,\r\n///   input[type=\"url\"]:focus,\r\n///   input[type=\"week\"]:focus,\r\n///   textarea:focus,\r\n///   input[type=\"color\"]:hover,\r\n///   input[type=\"date\"]:hover,\r\n///   input[type=\"datetime\"]:hover,\r\n///   input[type=\"datetime-local\"]:hover,\r\n///   input[type=\"email\"]:hover,\r\n///   input[type=\"month\"]:hover,\r\n///   input[type=\"number\"]:hover,\r\n///   input[type=\"password\"]:hover,\r\n///   input[type=\"search\"]:hover,\r\n///   input[type=\"tel\"]:hover,\r\n///   input[type=\"text\"]:hover,\r\n///   input[type=\"time\"]:hover,\r\n///   input[type=\"url\"]:hover,\r\n///   input[type=\"week\"]:hover,\r\n///   textarea:hover {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:active,\r\n///   input[type=\"date\"]:active,\r\n///   input[type=\"datetime\"]:active,\r\n///   input[type=\"datetime-local\"]:active,\r\n///   input[type=\"email\"]:active,\r\n///   input[type=\"month\"]:active,\r\n///   input[type=\"number\"]:active,\r\n///   input[type=\"password\"]:active,\r\n///   input[type=\"search\"]:active,\r\n///   input[type=\"tel\"]:active,\r\n///   input[type=\"text\"]:active,\r\n///   input[type=\"time\"]:active,\r\n///   input[type=\"url\"]:active,\r\n///   input[type=\"week\"]:active,\r\n///   textarea:active {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                   'input[type=\"date\"]',\r\n                   'input[type=\"datetime\"]',\r\n                   'input[type=\"datetime-local\"]',\r\n                   'input[type=\"email\"]',\r\n                   'input[type=\"month\"]',\r\n                   'input[type=\"number\"]',\r\n                   'input[type=\"password\"]',\r\n                   'input[type=\"search\"]',\r\n                   'input[type=\"tel\"]',\r\n                   'input[type=\"text\"]',\r\n                   'input[type=\"time\"]',\r\n                   'input[type=\"url\"]',\r\n                   'input[type=\"week\"]',\r\n                   'input:not([type])',\r\n                   'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\r\n///\r\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\r\n///\r\n/// @type cubic-bezier\r\n\r\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\r\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\r\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\r\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\r\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\r\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\r\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\r\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\r\n\r\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\r\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\r\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\r\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\r\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\r\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\r\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\r\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\r\n\r\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\r\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\r\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\r\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\r\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\r\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\r\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\r\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\r\n",
		"@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to change the `word-wrap` property.\r\n///\r\n/// @param {String} $wrap [break-word]\r\n///   Value for the `word-break` property.\r\n///\r\n/// @example scss - Usage\r\n///   .wrapper {\r\n///     @include word-wrap(break-word);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .wrapper {\r\n///     overflow-wrap: break-word;\r\n///     word-break: break-all;\r\n///     word-wrap: break-word;\r\n///   }\r\n\r\n@mixin word-wrap($wrap: break-word) {\r\n  overflow-wrap: $wrap;\r\n  word-wrap: $wrap;\r\n\r\n  @if $wrap == break-word {\r\n    word-break: break-all;\r\n  } @else {\r\n    word-break: $wrap;\r\n  }\r\n}\r\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\r\n\r\n@mixin inline-block {\r\n  display: inline-block;\r\n\r\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\r\n\r\n  @if type-of($style) == string and type-of($base-color) == color {\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == string and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: #4294f0;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == color {\r\n    $base-color: $style;\r\n    $style: simple;\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: $style;\r\n    $style: simple;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == number {\r\n    $padding: $base-color;\r\n    $text-size: $style;\r\n    $base-color: #4294f0;\r\n    $style: simple;\r\n\r\n    @if $padding == #4294f0 {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Selector Style Button\r\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\r\n  // Grayscale button\r\n  @if $type == simple and $b-color == grayscale($b-color) {\r\n    @include simple($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == shiny and $b-color == grayscale($b-color) {\r\n    @include shiny($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == pill and $b-color == grayscale($b-color) {\r\n    @include pill($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == flat and $b-color == grayscale($b-color) {\r\n    @include flat($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  // Colored button\r\n  @if $type == simple {\r\n    @include simple($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == shiny {\r\n    @include shiny($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == pill {\r\n    @include pill($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == flat {\r\n    @include flat($b-color, false, $t-size, $pad);\r\n  }\r\n}\r\n\r\n// Simple Button\r\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\r\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\r\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\r\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-radius: 3px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 0 $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\r\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\r\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\r\n\r\n    @if $grayscale == true {\r\n      $border-active:       grayscale($border-active);\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    border: 1px solid $border-active;\r\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Shiny Button\r\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\r\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\r\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\r\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\r\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\r\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\r\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $border-bottom: grayscale($border-bottom);\r\n    $fourth-stop:   grayscale($fourth-stop);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $second-stop:   grayscale($second-stop);\r\n    $text-shadow:   grayscale($text-shadow);\r\n    $third-stop:    grayscale($third-stop);\r\n  }\r\n\r\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\r\n\r\n  border: 1px solid $border;\r\n  border-bottom: 1px solid $border-bottom;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n\r\n  &:hover:not(:disabled) {\r\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\r\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\r\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\r\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\r\n\r\n    @if $grayscale == true {\r\n      $first-stop-hover:  grayscale($first-stop-hover);\r\n      $second-stop-hover: grayscale($second-stop-hover);\r\n      $third-stop-hover:  grayscale($third-stop-hover);\r\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\r\n    }\r\n\r\n    @include linear-gradient(top, $first-stop-hover  0%,\r\n                                  $second-stop-hover 50%,\r\n                                  $third-stop-hover  50%,\r\n                                  $fourth-stop-hover 100%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\r\n\r\n    @if $grayscale == true {\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Pill Button\r\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\r\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\r\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\r\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\r\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\r\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border-bottom: grayscale($border-bottom);\r\n    $border-sides:  grayscale($border-sides);\r\n    $border-top:    grayscale($border-top);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border-top;\r\n  border-color: $border-top $border-sides $border-bottom;\r\n  border-radius: 16px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\r\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\r\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\r\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\r\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\r\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\r\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $border-bottom:       grayscale($border-bottom);\r\n      $border-sides:        grayscale($border-sides);\r\n      $border-top:          grayscale($border-top);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n      $text-shadow-hover:   grayscale($text-shadow-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    background-clip: padding-box;\r\n    border: 1px solid $border-top;\r\n    border-color: $border-top $border-sides $border-bottom;\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    text-shadow: 0 -1px 1px $text-shadow-hover;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\r\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\r\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\r\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\r\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\r\n\r\n    @if $grayscale == true {\r\n      $active-color:         grayscale($active-color);\r\n      $border-active:        grayscale($border-active);\r\n      $border-bottom-active: grayscale($border-bottom-active);\r\n      $inset-shadow-active:  grayscale($inset-shadow-active);\r\n      $text-shadow-active:   grayscale($text-shadow-active);\r\n    }\r\n\r\n    background: $active-color;\r\n    border: 1px solid $border-active;\r\n    border-bottom: 1px solid $border-bottom-active;\r\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\r\n    text-shadow: 0 -1px 1px $text-shadow-active;\r\n  }\r\n}\r\n\r\n// Flat Button\r\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n  }\r\n\r\n  background-color: $base-color;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled){\r\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover: grayscale($base-color-hover);\r\n    }\r\n\r\n    background-color: $base-color-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-active: grayscale($base-color-active);\r\n    }\r\n\r\n    background-color: $base-color-active;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n// Flexible grid\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n\r\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Flexible gutter\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n\r\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n\r\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function golden-ratio($value, $increment) {\r\n  @return modular-scale($increment, $value, $ratio: $golden);\r\n\r\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\r\n}\r\n\r\n@mixin box-sizing($box) {\r\n  @include prefixer(box-sizing, $box, webkit moz spec);\r\n\r\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\r\n}\r\n",
		"/// Select all children from the first to `$num`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin first($num) {\r\n  @if $num == 1 {\r\n    &:first-child {\r\n      @content;\r\n    }\r\n  } @else {\r\n    &:nth-child(-n + #{$num}) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n/// Select all children from the last to `$num`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin last($num) {\r\n  &:nth-last-child(-n + #{$num}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all children after the first to `$num`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin after-first($num) {\r\n  &:nth-child(n + #{$num + 1}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all children before `$num` from the last.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin from-end($num) {\r\n  &:nth-last-child(#{$num}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all children between `$first` and `$last`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin between($first, $last) {\r\n  &:nth-child(n + #{$first}):nth-child(-n + #{$last}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all even children between `$first` and `$last`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin even-between($first, $last) {\r\n  &:nth-child(even):nth-child(n + #{$first}):nth-child(-n + #{$last}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all odd children between `$first` and `$last`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin odd-between($first, $last) {\r\n  &:nth-child(odd):nth-child(n + #{$first}):nth-child(-n + #{$last}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all `$num` children between `$first` and `$last`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin n-between($num, $first, $last) {\r\n  &:nth-child(#{$num}n):nth-child(n + #{$first}):nth-child(-n + #{$last}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n/// Select all children but `$num`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin all-but($num) {\r\n  &:not(:nth-child(#{$num})) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select children each `$num`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n/// @alias every\r\n@mixin each($num) {\r\n  &:nth-child(#{$num}n) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select children each `$num`.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin every($num) {\r\n  &:nth-child(#{$num}n) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select the `$num` child from the start and the `$num` child from the last.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin from-first-last($num) {\r\n  &:nth-child(#{$num}),\r\n  &:nth-last-child(#{$num}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n/// Select the item in the middle of `$num` child. Only works with odd number\r\n/// chain.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin middle($num) {\r\n  &:nth-child(#{round($num / 2)}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n/// Select all children between the `$num` first and the `$num` last.\r\n/// @group with-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - id of the child\r\n@mixin all-but-first-last($num) {\r\n  &:nth-child(n + #{$num}):nth-last-child(n + #{$num}) {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n/// This quantity-query mixin will only select the first of `$limit` items. It will not\r\n/// work if there is not as much as item as you set in `$limit`.\r\n/// @group Quantity queries\r\n/// @param {number} $limit\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin first-of($limit) {\r\n  &:nth-last-child(#{$limit}):first-child {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// This quantity-query mixin will only select the last of `$limit` items. It will not\r\n/// if there is not as much as item as you set in `$limit`.\r\n/// @group Quantity queries\r\n/// @param {number} $limit\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin last-of($limit) {\r\n  &:nth-of-type(#{$limit}):nth-last-of-type(1) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// This quantity-query mixin will select every items if there is at least `$num` items. It will not\r\n/// if there is not as much as item as you set in `$num`.\r\n/// @group Quantity queries\r\n/// @param {number} $limit\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin at-least($num) {\r\n  $selector: &;\r\n  $child: nth(nth($selector, -1), -1);\r\n\r\n  &:nth-last-child(n + #{$num}),\r\n  &:nth-last-child(n + #{$num}) ~ #{$child} {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// This quantity-query mixin will select every items if there is at most `$num` items. It will not\r\n/// if there is not as much as item as you set in `$num`.\r\n/// @group Quantity queries\r\n/// @param {number} $limit\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin at-most($num) {\r\n  $selector: &;\r\n  $child: nth(nth($selector, -1), -1);\r\n\r\n  &:nth-last-child(-n + #{$num}):first-child,\r\n  &:nth-last-child(-n + #{$num}):first-child ~ #{$child} {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// This quantity-query mixin will select every items only if there is between `$min` and `$max` items.\r\n/// @group Quantity queries\r\n/// @param {number} $limit\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin in-between($min, $max) {\r\n  $selector: &;\r\n  $child: nth(nth($selector, -1), -1);\r\n\r\n  &:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child,\r\n  &:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child ~ #{$child} {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select the first exact child\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin first-child() {\r\n  &:first-of-type {\r\n    @content\r\n  }\r\n}\r\n\r\n/// Select the last exact child\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin last-child() {\r\n  &:last-of-type {\r\n    @content\r\n  }\r\n}\r\n\r\n/// Select all even children.\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin even() {\r\n  &:nth-child(even) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select all odd children.\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin odd() {\r\n  &:nth-child(odd) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Select only the first and last child.\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin first-last() {\r\n  &:first-child,\r\n  &:last-child {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Will only select the child if it’s unique.\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @alias only\r\n@mixin unique() {\r\n  &:only-child {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Will only select the child if it’s unique.\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin only() {\r\n  &:only-child {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Will only select children if they are not unique. Meaning if there is at\r\n/// least 2 children, the style is applied.\r\n/// @group no-arguments\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n@mixin not-unique() {\r\n  &:not(:only-child) {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n/// This mixin is used to automatically sort z-index in numerical order. But it\r\n/// can also sort them in anti-numerical order, depending the parameters you use.\r\n/// @group using functions\r\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\r\n/// @param {number} $num - Number of children\r\n/// @param {string} $direction [forward] - Direction of the sort\r\n/// @param {number} $index [0] - Index of the sorting\r\n@mixin child-index($num, $direction: 'forward', $index: 0) {\r\n  @for $i from 1 through $num {\r\n    @if ($direction == 'forward') {\r\n      &:nth-child(#{$i}) {\r\n        z-index: order-index($i, $index);\r\n        @content;\r\n      }\r\n    } @else if ($direction == 'backward') {\r\n      &:nth-last-child(#{$i}) {\r\n        z-index: order-index($i, $index);\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/// Used by the child-index mixin. It will returned the proper sorted numbers\r\n/// depending on the `$index` value.\r\n/// @access private\r\n/// @param {number} $num - Number of children\r\n/// @param {number} $index - Index of the sorting\r\n@function order-index($i, $index) {\r\n  @return ($index + $i);\r\n}\r\n",
		"/*** BSP: @extend %reset;***/\r\n%clearfix {\r\n    &:before, &:after {\r\n        content: \"\";\r\n        display: table;\r\n    }\r\n    &:after {\r\n        clear: both;\r\n    }\r\n}\r\n%reset{\r\n    margin:0 !important;\r\n    padding:0 !important;\r\n    border:0 !important;\r\n}\r\n%divider{\r\n    padding: 0 .5em;\r\n    border-right: 1px solid currentColor;\r\n}\r\n%text-indent {\r\n    text-indent:-9999px;\r\n    display:block;\r\n    overflow:hidden;\r\n}",
		"@mixin test(){\r\n    border:2px dotted $foo;\r\n}\r\n@mixin font-color($bg) {\r\n    @if lightness($bg) < 75% {\r\n        color:$white !important;\r\n    }\r\n    @else {\r\n        color:$brand-primary;\r\n    }\r\n}\r\n//Grid**/\r\n@mixin simple-flex-square-grid($margin){\r\n    @include flex-grow(1);\r\n    > *{\r\n        @include flex(1);\r\n        margin:$margin;\r\n    }\r\n    > *:last-child{\r\n        @include flex-grow(0);\r\n        @include flex-shrink(0);  \r\n    }\r\n}\r\n/*** Mixins & Placeholders ***/\r\n@mixin pointer-events($method){\r\n-moz-pointer-events: $method;\r\n-webkit-pointer-events: $method;\r\n-ms-pointer-events: $method;\r\npointer-events: $method;\r\n}\r\n\r\n@mixin transform($method, $number){\r\n    -moz-transform: $method($number);\r\n    -webkit-transform: $method($number);\r\n    -ms-transform: $method($number);\r\n    transform: $method($number);\r\n}\r\n\r\n@mixin appearance($value){\r\n    -webkit-appearance: $value;\r\n    -moz-appearance:    $value;\r\n    appearance:         $value;\r\n}\r\n@mixin box-sizing {\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}\r\n@mixin border-radius ($r){\r\n    -webkit-border-radius: $r;\r\n    border-radius: $r;\r\n    overflow: hidden;\r\n}\r\n@mixin border ($width,$style,$color){\r\n    border: {\r\n        width: $width;\r\n        style:$style;\r\n        color: $color;\r\n    }\r\n}\r\n@mixin bg-color($bg){\r\n    background-color: $bg;\r\n    @include font-color($bg)\r\n}\r\n\r\n@mixin circle($item) {\r\n    width: $item !important;\r\n    height: $item !important;\r\n    line-height: $item;\r\n    @include border-radius ($item/2);\r\n    overflow:hidden;\r\n}\r\n@mixin square($length){\r\n    height:$length !important;\r\n    width:$length !important;\r\n}\r\n@mixin shadow {\r\n    -webkit-box-shadow: 0 0 2px 1px rgba(0,0,0,.2);\r\n    -moz-box-shadow: 0 0 2px 1px rgba(0,0,0,.2);\r\n    box-shadow: 0 0 2px 1px rgba(0,0,0,.2);\r\n}\r\n\r\n@mixin gray-filter($percent) {\r\n    filter: url(\"data:image/svg+xml;utf8,<svg xmlns=\\'http://www.w3.org/2000/svg\\'><filter id=\\'grayscale\\'><feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/></filter></svg>#grayscale\"); /* Firefox 10+, Firefox on Android */\r\n    filter: gray; /* IE6-9 */\r\n    -webkit-filter: grayscale($percent);\r\n}\r\n\r\n@mixin ellipsis($width){\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow:hidden;\r\n    width:$width;\r\n}\r\n/**** caret ****/\r\n@mixin caret-right-style ($size,$ml) {\r\n    border-bottom: $size solid transparent;\r\n    border-left: $size solid currentColor;\r\n    border-top: $size solid transparent;\r\n    border-width: $size 0 $size $size;\r\n    margin-left: $ml;\r\n}\r\n@mixin caret-down-style ($size) {\r\n    border-bottom-color: transparent;\r\n    border-left-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: currentColor;\r\n    border-width: $size; \r\n    border-style: solid;\r\n}\r\n\r\n@mixin button-style ($r, $pd, $font) {\r\n    -webkit-border-radius: $r;\r\n    border-radius: $r;\r\n    border-width: 0;\r\n    box-shadow: none;\r\n    padding: $pd;\r\n    font-size: $font;\r\n    line-height: 1;\r\n}\r\n@mixin active-style {\r\n    background:$brand-primary;\r\n    background-image:none !important;\r\n    color:#fff;\r\n}\r\n@mixin icon-style ($cnt, $pd-ri, $op, $mg-le, $size) {\r\n    font-family: 'FontAwesome';\r\n    content: $cnt;\r\n    padding-right: $pd-ri;\r\n    opacity: $op;\r\n    margin-left:$mg-le;\r\n    font-size:$size;\r\n    speak: none;\r\n}\r\n/*@include icon-style (\"\\f075\", 0, 1, 0, 2em);*/\r\n\r\n@mixin carousel-indicator-style($box-size,$bd,$indent,$color,$align) {\r\n    height: $box-size;\r\n    width: $box-size;\r\n    line-height: $box-size;\r\n    border: $bd;\r\n    text-indent: $indent;\r\n    color: $color;\r\n    text-align: $align;\r\n}\r\n@mixin carousel-control-style ($bg,$bd,$size,$weight,$box-size,$mg-t,$op,$pos,$top,$left,$align,$color,$bg-img){\r\n    background: $bg;\r\n    border: $bd;\r\n    font-size: $size;\r\n    font-weight: $weight;\r\n    height: $box-size;\r\n    line-height: $box-size - 10px;\r\n    margin-top: $mg-t;\r\n    opacity: $op;\r\n    position: $pos;\r\n    top: $top;\r\n    left: $left;\r\n    text-align: $align;\r\n    width: $box-size;\r\n    color: $color;\r\n    background-image: none;\r\n    text-shadow: none;\r\n}\r\n@mixin carousel-caption($bg,$pos,$top,$left,$align,$z) {\r\n    background: $bg;\r\n    position: $pos;\r\n    top: $top;\r\n    left: $left;\r\n    width: inherit;\r\n    text-align: $align;\r\n    text-shadow: none;\r\n    z-index: $z;\r\n}\r\n@mixin bubble-style {\r\n    border: $light-gray 1px solid;\r\n    padding: 14px 12px;\r\n    position: relative;\r\n}\r\n@mixin overlay {\r\n/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#000000+0,000000+100&0.85+0,0+52 */\r\nbackground: -moz-linear-gradient(45deg,  rgba(0,0,0,0.85) 0%, rgba(0,0,0,0) 100%, rgba(0,0,0,0) 100%); /* FF3.6-15 */\r\nbackground: -webkit-linear-gradient(45deg,  rgba(0,0,0,0.85) 0%,rgba(0,0,0,0) 100%,rgba(0,0,0,0) 100%); /* Chrome10-25,Safari5.1-6 */\r\nbackground: linear-gradient(45deg,  rgba(0,0,0,0.85) 0%,rgba(0,0,0,0) 100%,rgba(0,0,0,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#a6000000', endColorstr='#00000000',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */\r\n}\r\n@mixin alpha-background-color($color, $background) {\r\n  $percent: alpha($color) * 100%;\r\n  $opaque: opacify($color, 1);\r\n  $solid-color: mix($opaque, $background, $percent);\r\n  background-color: $solid-color;\r\n  background-color: $color;\r\n}\r\n/* Bsp. @include alpha-background-color(rgba(black, 0.35), white); */\r\n@mixin linearGradient($top, $bottom){\r\n    background: $top; /* Old browsers */\r\n    background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */\r\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */\r\n    background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */\r\n    background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */\r\n    background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */\r\n    background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */\r\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */\r\n}\r\n\r\n@mixin wp-edit-post{\r\n    text-align:right;\r\n    display:block;\r\n    font-size:smaller;\r\n    font-style:italic;\r\n    &:before{\r\n        @include icon-style (\"\\f044\", .5em, 1, 0, 1em);\r\n    }\r\n}\r\n@mixin text-indent($pos) {\r\n    text-indent:$pos;\r\n    display:block;\r\n    overflow:hidden;\r\n}\r\n@mixin rotate($deg){\r\n    \t-webkit-transform: rotate($deg);\r\n\t-moz-transform: rotate($deg);\r\n\t-ms-transform: rotate($deg);\r\n\t-o-transform: rotate($deg);\r\n\ttransform: rotate($deg);\r\n}\r\n@mixin page-break($method){\r\n        -webkit-column-break-inside: $method;\r\n          page-break-inside: $method;\r\n               break-inside: $method;\r\n}\r\n\r\n@mixin target-for-fixed-menu($height){\r\n    *:target:before{\r\n        content: ' ';\r\n        display: block;\r\n        height: $height;\r\n        margin: -$height 0 0;\r\n    }\r\n}\r\n/******* SVG *********/\r\n@mixin svg-scale($size){\r\n\tposition: relative; \r\n\theight: 0; \r\n\twidth: $size; \r\n\tpadding: 0;\r\n\tpadding-bottom: $size;\r\n\t\t\t\r\n\tsvg{\r\n\t\tposition: absolute; \r\n\t \theight: $size; \r\n\t \twidth: $size; \r\n\t \tleft: 0; \r\n\t \ttop: 0;\r\n\t}\r\n}\r\n\r\n/*** WP Specials ***/\r\n@mixin screen-reader-text{\r\n    /* Text meant only for screen readers. */\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    position: absolute !important;\r\n    height: 1px;\r\n    width: 1px;\r\n    overflow: hidden;\r\n    &:focus {\r\n        background-color: #f1f1f1;\r\n        border-radius: 3px;\r\n        box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\r\n        clip: auto !important;\r\n        color: #21759b;\r\n        display: block;\r\n        font-size: 14px;\r\n        font-size: 0.875rem;\r\n        font-weight: bold;\r\n        height: auto;\r\n        left: 5px;\r\n        line-height: normal;\r\n        padding: 15px 23px 14px;\r\n        text-decoration: none;\r\n        top: 5px;\r\n        width: auto;\r\n        z-index: 100000; /* Above WP toolbar. */\r\n    }\r\n\r\n}\r\n/**** Filter ****/\r\n@mixin blur($item){\r\n      -webkit-filter: blur($item);\r\n  -moz-filter: blur($item);\r\n  -o-filter: blur($item);\r\n  -ms-filter: blur($item);\r\n  filter: blur($item);\r\n  z-index:-1;\r\n}\r\n/*** typography***/\r\n@mixin header-subline ($color, $width, $height, $mg-top){\r\n    &:after {\r\n        content:'';\r\n        display:block;\r\n        height:$height;\r\n        width:$width;\r\n        background:$color;\r\n        margin-top: $mg-top;\r\n    }\r\n}",
		"// Bootstrap functions\r\n//\r\n// Utility mixins and functions for evalutating source code across our variables, maps, and mixins.\r\n\r\n// Ascending\r\n// Used to evaluate Sass maps like our grid breakpoints.\r\n@mixin _assert-ascending($map, $map-name) {\r\n  $prev-key: null;\r\n  $prev-num: null;\r\n  @each $key, $num in $map {\r\n    @if $prev-num == null {\r\n      // Do nothing\r\n    } @else if not comparable($prev-num, $num) {\r\n      @warn \"Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\r\n    } @else if $prev-num >= $num {\r\n      @warn \"Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\r\n    }\r\n    $prev-key: $key;\r\n    $prev-num: $num;\r\n  }\r\n}\r\n\r\n// Starts at zero\r\n// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.\r\n@mixin _assert-starts-at-zero($map) {\r\n  $values: map-values($map);\r\n  $first-value: nth($values, 1);\r\n  @if $first-value != 0 {\r\n    @warn \"First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.\";\r\n  }\r\n}\r\n\r\n// Replace `$search` with `$replace` in `$string`\r\n// Used on our SVG icon backgrounds for custom forms.\r\n//\r\n// @author Hugo Giraudel\r\n// @param {String} $string - Initial string\r\n// @param {String} $search - Substring to replace\r\n// @param {String} $replace ('') - New value\r\n// @return {String} - Updated string\r\n@function str-replace($string, $search, $replace: \"\") {\r\n  $index: str-index($string, $search);\r\n\r\n  @if $index {\r\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n  }\r\n\r\n  @return $string;\r\n}\r\n\r\n// Color contrast\r\n@function color-yiq($color) {\r\n  $r: red($color);\r\n  $g: green($color);\r\n  $b: blue($color);\r\n\r\n  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;\r\n\r\n  @if ($yiq >= $yiq-contrasted-threshold) {\r\n    @return $yiq-text-dark;\r\n  } @else {\r\n    @return $yiq-text-light;\r\n  }\r\n}\r\n\r\n// Retrieve color Sass maps\r\n@function color($key: \"blue\") {\r\n  @return map-get($colors, $key);\r\n}\r\n\r\n@function theme-color($key: \"primary\") {\r\n  @return map-get($theme-colors, $key);\r\n}\r\n\r\n@function gray($key: \"100\") {\r\n  @return map-get($grays, $key);\r\n}\r\n\r\n// Request a theme color level\r\n@function theme-color-level($color-name: \"primary\", $level: 0) {\r\n  $color: theme-color($color-name);\r\n  $color-base: if($level > 0, #000, #fff);\r\n  $level: abs($level);\r\n\r\n  @return mix($color-base, $color, $level * $theme-color-interval);\r\n}\r\n",
		"// Variables\r\n//\r\n// Variables should follow the `$component-state-property-size` formula for\r\n// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.\r\n\r\n\r\n//\r\n// Color system\r\n//\r\n\r\n// stylelint-disable\r\n$white:    #fff !default;\r\n$gray-100: #f8f9fa !default;\r\n$gray-200: #e9ecef !default;\r\n$gray-300: #dee2e6 !default;\r\n$gray-400: #ced4da !default;\r\n$gray-500: #adb5bd !default;\r\n$gray-600: #6c757d !default;\r\n$gray-700: #495057 !default;\r\n$gray-800: #343a40 !default;\r\n$gray-900: #212529 !default;\r\n$black:    #000 !default;\r\n\r\n$grays: () !default;\r\n$grays: map-merge((\r\n  \"100\": $gray-100,\r\n  \"200\": $gray-200,\r\n  \"300\": $gray-300,\r\n  \"400\": $gray-400,\r\n  \"500\": $gray-500,\r\n  \"600\": $gray-600,\r\n  \"700\": $gray-700,\r\n  \"800\": $gray-800,\r\n  \"900\": $gray-900\r\n), $grays);\r\n\r\n$blue:    #007bff !default;\r\n$indigo:  #6610f2 !default;\r\n$purple:  #6f42c1 !default;\r\n$pink:    #e83e8c !default;\r\n$red:     #dc3545 !default;\r\n$orange:  #fd7e14 !default;\r\n$yellow:  #ffc107 !default;\r\n$green:   #28a745 !default;\r\n$teal:    #20c997 !default;\r\n$cyan:    #17a2b8 !default;\r\n\r\n$colors: () !default;\r\n$colors: map-merge((\r\n  \"blue\":       $blue,\r\n  \"indigo\":     $indigo,\r\n  \"purple\":     $purple,\r\n  \"pink\":       $pink,\r\n  \"red\":        $red,\r\n  \"orange\":     $orange,\r\n  \"yellow\":     $yellow,\r\n  \"green\":      $green,\r\n  \"teal\":       $teal,\r\n  \"cyan\":       $cyan,\r\n  \"white\":      $white,\r\n  \"gray\":       $gray-600,\r\n  \"gray-dark\":  $gray-800\r\n), $colors);\r\n\r\n$primary:       $blue !default;\r\n$secondary:     $gray-600 !default;\r\n$success:       $green !default;\r\n$info:          $cyan !default;\r\n$warning:       $yellow !default;\r\n$danger:        $red !default;\r\n$light:         $gray-100 !default;\r\n$dark:          $gray-800 !default;\r\n\r\n\r\n$theme-colors: () !default;\r\n$theme-colors: map-merge((\r\n  \"primary\":    $primary,\r\n  \"secondary\":  $secondary,\r\n  \"success\":    $success,\r\n  \"info\":       $info,\r\n  \"warning\":    $warning,\r\n  \"danger\":     $danger,\r\n  \"light\":      $light,\r\n  \"dark\":       $dark\r\n), $theme-colors);\r\n// stylelint-enable\r\n\r\n// Set a specific jump point for requesting color jumps\r\n$theme-color-interval:      10% !default;\r\n\r\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\r\n$yiq-contrasted-threshold: 150 !default;\r\n\r\n// Customize the light and dark text colors for use in our YIQ color contrast function.\r\n$yiq-text-dark: $gray-900 !default;\r\n$yiq-text-light: $white !default;\r\n\r\n// Options\r\n//\r\n// Quickly modify global styling by enabling or disabling optional features.\r\n\r\n$enable-caret:              true !default;\r\n$enable-rounded:            true !default;\r\n$enable-shadows:            false !default;\r\n$enable-gradients:          false !default;\r\n$enable-transitions:        true !default;\r\n$enable-hover-media-query:  false !default; // Deprecated, no longer affects any compiled CSS\r\n$enable-grid-classes:       true !default;\r\n$enable-print-styles:       true !default;\r\n\r\n\r\n// Spacing\r\n//\r\n// Control the default styling of most Bootstrap elements by modifying these\r\n// variables. Mostly focused on spacing.\r\n// You can add more entries to the $spacers map, should you need more variation.\r\n\r\n// stylelint-disable\r\n$spacer: 1rem !default;\r\n$spacers: () !default;\r\n\r\n$spacers: map-merge((\r\n    0:  0,\r\n     1:    ($spacer * .25),\r\n  2:    ($spacer * .5),\r\n  3:    $spacer,\r\n  4:    ($spacer * 1.5),\r\n  5:    ($spacer * 3)\r\n), $spacers);\r\n\r\n// This variable affects the `.h-*` and `.w-*` classes.\r\n$sizes: () !default;\r\n$sizes: map-merge((\r\n  25: 25%,\r\n  50: 50%,\r\n  75: 75%,\r\n  100: 100%\r\n), $sizes);\r\n// stylelint-enable\r\n\r\n// Body\r\n//\r\n// Settings for the `<body>` element.\r\n\r\n$body-bg:                   $white !default;\r\n$body-color:                $gray-900 !default;\r\n\r\n// Links\r\n//\r\n// Style anchor elements.\r\n\r\n$link-color:                theme-color(\"primary\") !default;\r\n$link-decoration:           none !default;\r\n$link-hover-color:          darken($link-color, 15%) !default;\r\n$link-hover-decoration:     underline !default;\r\n\r\n// Paragraphs\r\n//\r\n// Style p element.\r\n\r\n$paragraph-margin-bottom:   1rem !default;\r\n\r\n\r\n// Grid breakpoints\r\n//\r\n// Define the minimum dimensions at which your layout will change,\r\n// adapting to different screen sizes, for use in media queries.\r\n\r\n$grid-breakpoints: (\r\n  xs: 0,\r\n  sm: 576px,\r\n  md: 768px,\r\n  lg: 992px,\r\n  xl: 1200px\r\n) !default;\r\n\r\n@include _assert-ascending($grid-breakpoints, \"$grid-breakpoints\");\r\n@include _assert-starts-at-zero($grid-breakpoints);\r\n\r\n\r\n// Grid containers\r\n//\r\n// Define the maximum width of `.container` for different screen sizes.\r\n\r\n$container-max-widths: (\r\n  sm: 540px,\r\n  md: 720px,\r\n  lg: 960px,\r\n  xl: 1140px\r\n) !default;\r\n\r\n@include _assert-ascending($container-max-widths, \"$container-max-widths\");\r\n\r\n\r\n// Grid columns\r\n//\r\n// Set the number of columns and specify the width of the gutters.\r\n\r\n$grid-columns:                12 !default;\r\n$grid-gutter-width:           30px !default;\r\n\r\n// Components\r\n//\r\n// Define common padding and border radius sizes and more.\r\n\r\n$line-height-lg:              1.5 !default;\r\n$line-height-sm:              1.5 !default;\r\n\r\n$border-width:                1px !default;\r\n$border-color:                $gray-300 !default;\r\n\r\n$border-radius:               .25rem !default;\r\n$border-radius-lg:            .3rem !default;\r\n$border-radius-sm:            .2rem !default;\r\n\r\n$component-active-color:      $white !default;\r\n$component-active-bg:         theme-color(\"primary\") !default;\r\n\r\n$caret-width:                 .3em !default;\r\n\r\n$transition-base:             all .2s ease-in-out !default;\r\n$transition-fade:             opacity .15s linear !default;\r\n$transition-collapse:         height .35s ease !default;\r\n\r\n\r\n// Fonts\r\n//\r\n// Font, line-height, and color for body text, headings, and more.\r\n\r\n// stylelint-disable value-keyword-case\r\n$font-family-sans-serif:      -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !default;\r\n$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !default;\r\n$font-family-base:            $font-family-sans-serif !default;\r\n// stylelint-enable value-keyword-case\r\n\r\n$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`\r\n$font-size-lg:                ($font-size-base * 1.25) !default;\r\n$font-size-sm:                ($font-size-base * .875) !default;\r\n\r\n$font-weight-light:           300 !default;\r\n$font-weight-normal:          400 !default;\r\n$font-weight-bold:            700 !default;\r\n\r\n$font-weight-base:            $font-weight-normal !default;\r\n$line-height-base:            1.5 !default;\r\n\r\n$h1-font-size:                $font-size-base * 2.5 !default;\r\n$h2-font-size:                $font-size-base * 2 !default;\r\n$h3-font-size:                $font-size-base * 1.75 !default;\r\n$h4-font-size:                $font-size-base * 1.5 !default;\r\n$h5-font-size:                $font-size-base * 1.25 !default;\r\n$h6-font-size:                $font-size-base !default;\r\n\r\n$headings-margin-bottom:      ($spacer / 2) !default;\r\n$headings-font-family:        inherit !default;\r\n$headings-font-weight:        500 !default;\r\n$headings-line-height:        1.2 !default;\r\n$headings-color:              inherit !default;\r\n\r\n$display1-size:               6rem !default;\r\n$display2-size:               5.5rem !default;\r\n$display3-size:               4.5rem !default;\r\n$display4-size:               3.5rem !default;\r\n\r\n$display1-weight:             300 !default;\r\n$display2-weight:             300 !default;\r\n$display3-weight:             300 !default;\r\n$display4-weight:             300 !default;\r\n$display-line-height:         $headings-line-height !default;\r\n\r\n$lead-font-size:              ($font-size-base * 1.25) !default;\r\n$lead-font-weight:            300 !default;\r\n\r\n$small-font-size:             80% !default;\r\n\r\n$text-muted:                  $gray-600 !default;\r\n\r\n$blockquote-small-color:      $gray-600 !default;\r\n$blockquote-font-size:        ($font-size-base * 1.25) !default;\r\n\r\n$hr-border-color:             rgba($black, .1) !default;\r\n$hr-border-width:             $border-width !default;\r\n\r\n$mark-padding:                .2em !default;\r\n\r\n$dt-font-weight:              $font-weight-bold !default;\r\n\r\n$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black, .25) !default;\r\n$nested-kbd-font-weight:      $font-weight-bold !default;\r\n\r\n$list-inline-padding:         .5rem !default;\r\n\r\n$mark-bg:                     #fcf8e3 !default;\r\n\r\n$hr-margin-y:                 $spacer !default;\r\n\r\n\r\n// Tables\r\n//\r\n// Customizes the `.table` component with basic values, each used across all table variations.\r\n\r\n$table-cell-padding:          .75rem !default;\r\n$table-cell-padding-sm:       .3rem !default;\r\n\r\n$table-bg:                    transparent !default;\r\n$table-accent-bg:             rgba($black, .05) !default;\r\n$table-hover-bg:              rgba($black, .075) !default;\r\n$table-active-bg:             $table-hover-bg !default;\r\n\r\n$table-border-width:          $border-width !default;\r\n$table-border-color:          $gray-300 !default;\r\n\r\n$table-head-bg:               $gray-200 !default;\r\n$table-head-color:            $gray-700 !default;\r\n\r\n$table-dark-bg:               $gray-900 !default;\r\n$table-dark-accent-bg:        rgba($white, .05) !default;\r\n$table-dark-hover-bg:         rgba($white, .075) !default;\r\n$table-dark-border-color:     lighten($gray-900, 7.5%) !default;\r\n$table-dark-color:            $body-bg !default;\r\n\r\n\r\n// Buttons + Forms\r\n//\r\n// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.\r\n\r\n$input-btn-padding-y:         .375rem !default;\r\n$input-btn-padding-x:         .75rem !default;\r\n$input-btn-line-height:       $line-height-base !default;\r\n\r\n$input-btn-focus-width:       .2rem !default;\r\n$input-btn-focus-color:       rgba($component-active-bg, .25) !default;\r\n$input-btn-focus-box-shadow:  0 0 0 $input-btn-focus-width $input-btn-focus-color !default;\r\n\r\n$input-btn-padding-y-sm:      .25rem !default;\r\n$input-btn-padding-x-sm:      .5rem !default;\r\n$input-btn-line-height-sm:    $line-height-sm !default;\r\n\r\n$input-btn-padding-y-lg:      .5rem !default;\r\n$input-btn-padding-x-lg:      1rem !default;\r\n$input-btn-line-height-lg:    $line-height-lg !default;\r\n\r\n$input-btn-border-width:      $border-width !default;\r\n\r\n\r\n// Buttons\r\n//\r\n// For each of Bootstrap's buttons, define text, background, and border color.\r\n\r\n$btn-padding-y:               $input-btn-padding-y !default;\r\n$btn-padding-x:               $input-btn-padding-x !default;\r\n$btn-line-height:             $input-btn-line-height !default;\r\n\r\n$btn-padding-y-sm:            $input-btn-padding-y-sm !default;\r\n$btn-padding-x-sm:            $input-btn-padding-x-sm !default;\r\n$btn-line-height-sm:          $input-btn-line-height-sm !default;\r\n\r\n$btn-padding-y-lg:            $input-btn-padding-y-lg !default;\r\n$btn-padding-x-lg:            $input-btn-padding-x-lg !default;\r\n$btn-line-height-lg:          $input-btn-line-height-lg !default;\r\n\r\n$btn-border-width:            $input-btn-border-width !default;\r\n\r\n$btn-font-weight:             $font-weight-normal !default;\r\n$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;\r\n$btn-focus-width:             $input-btn-focus-width !default;\r\n$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;\r\n$btn-disabled-opacity:        .65 !default;\r\n$btn-active-box-shadow:       inset 0 3px 5px rgba($black, .125) !default;\r\n\r\n$btn-link-disabled-color:     $gray-600 !default;\r\n\r\n$btn-block-spacing-y:         .5rem !default;\r\n\r\n// Allows for customizing button radius independently from global border radius\r\n$btn-border-radius:           $border-radius !default;\r\n$btn-border-radius-lg:        $border-radius-lg !default;\r\n$btn-border-radius-sm:        $border-radius-sm !default;\r\n\r\n$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\r\n\r\n\r\n// Forms\r\n\r\n$input-padding-y:                       $input-btn-padding-y !default;\r\n$input-padding-x:                       $input-btn-padding-x !default;\r\n$input-line-height:                     $input-btn-line-height !default;\r\n\r\n$input-padding-y-sm:                    $input-btn-padding-y-sm !default;\r\n$input-padding-x-sm:                    $input-btn-padding-x-sm !default;\r\n$input-line-height-sm:                  $input-btn-line-height-sm !default;\r\n\r\n$input-padding-y-lg:                    $input-btn-padding-y-lg !default;\r\n$input-padding-x-lg:                    $input-btn-padding-x-lg !default;\r\n$input-line-height-lg:                  $input-btn-line-height-lg !default;\r\n\r\n$input-bg:                              $white !default;\r\n$input-disabled-bg:                     $gray-200 !default;\r\n\r\n$input-color:                           $gray-700 !default;\r\n$input-border-color:                    $gray-400 !default;\r\n$input-border-width:                    $input-btn-border-width !default;\r\n$input-box-shadow:                      inset 0 1px 1px rgba($black, .075) !default;\r\n\r\n$input-border-radius:                   $border-radius !default;\r\n$input-border-radius-lg:                $border-radius-lg !default;\r\n$input-border-radius-sm:                $border-radius-sm !default;\r\n\r\n$input-focus-bg:                        $input-bg !default;\r\n$input-focus-border-color:              lighten($component-active-bg, 25%) !default;\r\n$input-focus-color:                     $input-color !default;\r\n$input-focus-width:                     $input-btn-focus-width !default;\r\n$input-focus-box-shadow:                $input-btn-focus-box-shadow !default;\r\n\r\n$input-placeholder-color:               $gray-600 !default;\r\n\r\n$input-height-border:                   $input-border-width * 2 !default;\r\n\r\n$input-height-inner:                    ($font-size-base * $input-btn-line-height) + ($input-btn-padding-y * 2) !default;\r\n$input-height:                          calc(#{$input-height-inner} + #{$input-height-border}) !default;\r\n\r\n$input-height-inner-sm:                 ($font-size-sm * $input-btn-line-height-sm) + ($input-btn-padding-y-sm * 2) !default;\r\n$input-height-sm:                       calc(#{$input-height-inner-sm} + #{$input-height-border}) !default;\r\n\r\n$input-height-inner-lg:                 ($font-size-lg * $input-btn-line-height-lg) + ($input-btn-padding-y-lg * 2) !default;\r\n$input-height-lg:                       calc(#{$input-height-inner-lg} + #{$input-height-border}) !default;\r\n\r\n$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\r\n\r\n$form-text-margin-top:                  .25rem !default;\r\n\r\n$form-check-input-gutter:               1.25rem !default;\r\n$form-check-input-margin-y:             .3rem !default;\r\n$form-check-input-margin-x:             .25rem !default;\r\n\r\n$form-check-inline-margin-x:            .75rem !default;\r\n$form-check-inline-input-margin-x:      .3125rem !default;\r\n\r\n$form-group-margin-bottom:              1rem !default;\r\n\r\n$input-group-addon-color:               $input-color !default;\r\n$input-group-addon-bg:                  $gray-200 !default;\r\n$input-group-addon-border-color:        $input-border-color !default;\r\n\r\n$custom-control-gutter:                 1.5rem !default;\r\n$custom-control-spacer-x:               1rem !default;\r\n\r\n$custom-control-indicator-size:         1rem !default;\r\n$custom-control-indicator-bg:           $gray-300 !default;\r\n$custom-control-indicator-bg-size:      50% 50% !default;\r\n$custom-control-indicator-box-shadow:   inset 0 .25rem .25rem rgba($black, .1) !default;\r\n\r\n$custom-control-indicator-disabled-bg:          $gray-200 !default;\r\n$custom-control-label-disabled-color:     $gray-600 !default;\r\n\r\n$custom-control-indicator-checked-color:        $component-active-color !default;\r\n$custom-control-indicator-checked-bg:           $component-active-bg !default;\r\n$custom-control-indicator-checked-disabled-bg:  rgba(theme-color(\"primary\"), .5) !default;\r\n$custom-control-indicator-checked-box-shadow:   none !default;\r\n\r\n$custom-control-indicator-focus-box-shadow:     0 0 0 1px $body-bg, $input-btn-focus-box-shadow !default;\r\n\r\n$custom-control-indicator-active-color:         $component-active-color !default;\r\n$custom-control-indicator-active-bg:            lighten($component-active-bg, 35%) !default;\r\n$custom-control-indicator-active-box-shadow:    none !default;\r\n\r\n$custom-checkbox-indicator-border-radius:       $border-radius !default;\r\n$custom-checkbox-indicator-icon-checked:        str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='#{$custom-control-indicator-checked-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n\r\n$custom-checkbox-indicator-indeterminate-bg:    $component-active-bg !default;\r\n$custom-checkbox-indicator-indeterminate-color: $custom-control-indicator-checked-color !default;\r\n$custom-checkbox-indicator-icon-indeterminate:  str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='#{$custom-checkbox-indicator-indeterminate-color}' d='M0 2h4'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n$custom-checkbox-indicator-indeterminate-box-shadow: none !default;\r\n\r\n$custom-radio-indicator-border-radius:          50% !default;\r\n$custom-radio-indicator-icon-checked:           str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='#{$custom-control-indicator-checked-color}'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n\r\n$custom-select-padding-y:           .375rem !default;\r\n$custom-select-padding-x:          .75rem !default;\r\n$custom-select-height:              $input-height !default;\r\n$custom-select-indicator-padding:   1rem !default; // Extra padding to account for the presence of the background-image based indicator\r\n$custom-select-line-height:         $input-btn-line-height !default;\r\n$custom-select-color:               $input-color !default;\r\n$custom-select-disabled-color:      $gray-600 !default;\r\n$custom-select-bg:                  $white !default;\r\n$custom-select-disabled-bg:         $gray-200 !default;\r\n$custom-select-bg-size:             8px 10px !default; // In pixels because image dimensions\r\n$custom-select-indicator-color:     $gray-800 !default;\r\n$custom-select-indicator:           str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n$custom-select-border-width:        $input-btn-border-width !default;\r\n$custom-select-border-color:        $input-border-color !default;\r\n$custom-select-border-radius:       $border-radius !default;\r\n\r\n$custom-select-focus-border-color:  $input-focus-border-color !default;\r\n$custom-select-focus-box-shadow:    inset 0 1px 2px rgba($black, .075), 0 0 5px rgba($custom-select-focus-border-color, .5) !default;\r\n\r\n$custom-select-font-size-sm:        75% !default;\r\n$custom-select-height-sm:           $input-height-sm !default;\r\n\r\n$custom-select-font-size-lg:        125% !default;\r\n$custom-select-height-lg:           $input-height-lg !default;\r\n\r\n$custom-file-height:                $input-height !default;\r\n$custom-file-focus-border-color:    $input-focus-border-color !default;\r\n$custom-file-focus-box-shadow:      $input-btn-focus-box-shadow !default;\r\n\r\n$custom-file-padding-y:             $input-btn-padding-y !default;\r\n$custom-file-padding-x:             $input-btn-padding-x !default;\r\n$custom-file-line-height:           $input-btn-line-height !default;\r\n$custom-file-color:                 $input-color !default;\r\n$custom-file-bg:                    $input-bg !default;\r\n$custom-file-border-width:          $input-btn-border-width !default;\r\n$custom-file-border-color:          $input-border-color !default;\r\n$custom-file-border-radius:         $input-border-radius !default;\r\n$custom-file-box-shadow:            $input-box-shadow !default;\r\n$custom-file-button-color:          $custom-file-color !default;\r\n$custom-file-button-bg:             $input-group-addon-bg !default;\r\n$custom-file-text: (\r\n  en: \"Browse\"\r\n) !default;\r\n\r\n\r\n// Form validation\r\n$form-feedback-margin-top:          $form-text-margin-top !default;\r\n$form-feedback-font-size:           $small-font-size !default;\r\n$form-feedback-valid-color:         theme-color(\"success\") !default;\r\n$form-feedback-invalid-color:       theme-color(\"danger\") !default;\r\n\r\n\r\n// Dropdowns\r\n//\r\n// Dropdown menu container and contents.\r\n\r\n$dropdown-min-width:                10rem !default;\r\n$dropdown-padding-y:                .5rem !default;\r\n$dropdown-spacer:                   .125rem !default;\r\n$dropdown-bg:                       $white !default;\r\n$dropdown-border-color:             rgba($black, .15) !default;\r\n$dropdown-border-radius:            $border-radius !default;\r\n$dropdown-border-width:             $border-width !default;\r\n$dropdown-divider-bg:               $gray-200 !default;\r\n$dropdown-box-shadow:               0 .5rem 1rem rgba($black, .175) !default;\r\n\r\n$dropdown-link-color:               $gray-900 !default;\r\n$dropdown-link-hover-color:         darken($gray-900, 5%) !default;\r\n$dropdown-link-hover-bg:            $gray-100 !default;\r\n\r\n$dropdown-link-active-color:        $component-active-color !default;\r\n$dropdown-link-active-bg:           $component-active-bg !default;\r\n\r\n$dropdown-link-disabled-color:      $gray-600 !default;\r\n\r\n$dropdown-item-padding-y:           .25rem !default;\r\n$dropdown-item-padding-x:           1.5rem !default;\r\n\r\n$dropdown-header-color:             $gray-600 !default;\r\n\r\n\r\n// Z-index master list\r\n//\r\n// Warning: Avoid customizing these values. They're used for a bird's eye view\r\n// of components dependent on the z-axis and are designed to all work together.\r\n\r\n$zindex-dropdown:                   1000 !default;\r\n$zindex-sticky:                     1020 !default;\r\n$zindex-fixed:                      1030 !default;\r\n$zindex-modal-backdrop:             1040 !default;\r\n$zindex-modal:                      1050 !default;\r\n$zindex-popover:                    1060 !default;\r\n$zindex-tooltip:                    1070 !default;\r\n\r\n// Navs\r\n\r\n$nav-link-padding-y:                .5rem !default;\r\n$nav-link-padding-x:                1rem !default;\r\n$nav-link-disabled-color:           $gray-600 !default;\r\n\r\n$nav-tabs-border-color:             $gray-300 !default;\r\n$nav-tabs-border-width:             $border-width !default;\r\n$nav-tabs-border-radius:            $border-radius !default;\r\n$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 $nav-tabs-border-color !default;\r\n$nav-tabs-link-active-color:        $gray-700 !default;\r\n$nav-tabs-link-active-bg:           $body-bg !default;\r\n$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;\r\n\r\n$nav-pills-border-radius:           $border-radius !default;\r\n$nav-pills-link-active-color:       $component-active-color !default;\r\n$nav-pills-link-active-bg:          $component-active-bg !default;\r\n\r\n// Navbar\r\n\r\n$navbar-padding-y:                  ($spacer / 2) !default;\r\n$navbar-padding-x:                  $spacer !default;\r\n\r\n$navbar-nav-link-padding-x:         .5rem !default;\r\n\r\n$navbar-brand-font-size:            $font-size-lg !default;\r\n// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link\r\n$nav-link-height:                   ($font-size-base * $line-height-base + $nav-link-padding-y * 2) !default;\r\n$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;\r\n$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;\r\n\r\n$navbar-toggler-padding-y:          .25rem !default;\r\n$navbar-toggler-padding-x:          .75rem !default;\r\n$navbar-toggler-font-size:          $font-size-lg !default;\r\n$navbar-toggler-border-radius:      $btn-border-radius !default;\r\n\r\n$navbar-dark-color:                 rgba($white, .5) !default;\r\n$navbar-dark-hover-color:           rgba($white, .75) !default;\r\n$navbar-dark-active-color:          $white !default;\r\n$navbar-dark-disabled-color:        rgba($white, .25) !default;\r\n$navbar-dark-toggler-icon-bg:       str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n$navbar-dark-toggler-border-color:  rgba($white, .1) !default;\r\n\r\n$navbar-light-color:                rgba($black, .5) !default;\r\n$navbar-light-hover-color:          rgba($black, .7) !default;\r\n$navbar-light-active-color:         rgba($black, .9) !default;\r\n$navbar-light-disabled-color:       rgba($black, .3) !default;\r\n$navbar-light-toggler-icon-bg:      str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n$navbar-light-toggler-border-color: rgba($black, .1) !default;\r\n\r\n// Pagination\r\n\r\n$pagination-padding-y:              .5rem !default;\r\n$pagination-padding-x:              .75rem !default;\r\n$pagination-padding-y-sm:           .25rem !default;\r\n$pagination-padding-x-sm:           .5rem !default;\r\n$pagination-padding-y-lg:           .75rem !default;\r\n$pagination-padding-x-lg:           1.5rem !default;\r\n$pagination-line-height:            1.25 !default;\r\n\r\n$pagination-color:                  $link-color !default;\r\n$pagination-bg:                     $white !default;\r\n$pagination-border-width:           $border-width !default;\r\n$pagination-border-color:           $gray-300 !default;\r\n\r\n$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;\r\n\r\n$pagination-hover-color:            $link-hover-color !default;\r\n$pagination-hover-bg:               $gray-200 !default;\r\n$pagination-hover-border-color:     $gray-300 !default;\r\n\r\n$pagination-active-color:           $component-active-color !default;\r\n$pagination-active-bg:              $component-active-bg !default;\r\n$pagination-active-border-color:    $pagination-active-bg !default;\r\n\r\n$pagination-disabled-color:         $gray-600 !default;\r\n$pagination-disabled-bg:            $white !default;\r\n$pagination-disabled-border-color:  $gray-300 !default;\r\n\r\n\r\n// Jumbotron\r\n\r\n$jumbotron-padding:                 2rem !default;\r\n$jumbotron-bg:                      $gray-200 !default;\r\n\r\n\r\n// Cards\r\n\r\n$card-spacer-y:                     .75rem !default;\r\n$card-spacer-x:                     1.25rem !default;\r\n$card-border-width:                 $border-width !default;\r\n$card-border-radius:                $border-radius !default;\r\n$card-border-color:                 rgba($black, .125) !default;\r\n$card-inner-border-radius:          calc(#{$card-border-radius} - #{$card-border-width}) !default;\r\n$card-cap-bg:                       rgba($black, .03) !default;\r\n$card-bg:                           $white !default;\r\n\r\n$card-img-overlay-padding:          1.25rem !default;\r\n\r\n$card-group-margin:                 ($grid-gutter-width / 2) !default;\r\n$card-deck-margin:                  $card-group-margin !default;\r\n\r\n$card-columns-count:                3 !default;\r\n$card-columns-gap:                  1.25rem !default;\r\n$card-columns-margin:               $card-spacer-y !default;\r\n\r\n\r\n// Tooltips\r\n\r\n$tooltip-font-size:           $font-size-sm !default;\r\n$tooltip-max-width:           200px !default;\r\n$tooltip-color:               $white !default;\r\n$tooltip-bg:                  $black !default;\r\n$tooltip-border-radius:        $border-radius !default;\r\n$tooltip-opacity:             .9 !default;\r\n$tooltip-padding-y:           .25rem !default;\r\n$tooltip-padding-x:           .5rem !default;\r\n$tooltip-margin:              0 !default;\r\n\r\n$tooltip-arrow-width:         .8rem !default;\r\n$tooltip-arrow-height:        .4rem !default;\r\n$tooltip-arrow-color:         $tooltip-bg !default;\r\n\r\n\r\n// Popovers\r\n\r\n$popover-font-size:                 $font-size-sm !default;\r\n$popover-bg:                        $white !default;\r\n$popover-max-width:                 276px !default;\r\n$popover-border-width:              $border-width !default;\r\n$popover-border-color:              rgba($black, .2) !default;\r\n$popover-border-radius:             $border-radius-lg !default;\r\n$popover-box-shadow:                0 .25rem .5rem rgba($black, .2) !default;\r\n\r\n$popover-header-bg:                 darken($popover-bg, 3%) !default;\r\n$popover-header-color:              $headings-color !default;\r\n$popover-header-padding-y:          .5rem !default;\r\n$popover-header-padding-x:          .75rem !default;\r\n\r\n$popover-body-color:                $body-color !default;\r\n$popover-body-padding-y:            $popover-header-padding-y !default;\r\n$popover-body-padding-x:            $popover-header-padding-x !default;\r\n\r\n$popover-arrow-width:               1rem !default;\r\n$popover-arrow-height:              .5rem !default;\r\n$popover-arrow-color:               $popover-bg !default;\r\n\r\n$popover-arrow-outer-color:         fade-in($popover-border-color, .05) !default;\r\n\r\n\r\n// Badges\r\n\r\n$badge-font-size:                   75% !default;\r\n$badge-font-weight:                 $font-weight-bold !default;\r\n$badge-padding-y:                   .25em !default;\r\n$badge-padding-x:                   .4em !default;\r\n$badge-border-radius:               $border-radius !default;\r\n\r\n$badge-pill-padding-x:              .6em !default;\r\n// Use a higher than normal value to ensure completely rounded edges when\r\n// customizing padding or font-size on labels.\r\n$badge-pill-border-radius:          10rem !default;\r\n\r\n\r\n// Modals\r\n\r\n// Padding applied to the modal body\r\n$modal-inner-padding:         1rem !default;\r\n\r\n$modal-dialog-margin:         .5rem !default;\r\n$modal-dialog-margin-y-sm-up: 1.75rem !default;\r\n\r\n$modal-title-line-height:           $line-height-base !default;\r\n\r\n$modal-content-bg:               $white !default;\r\n$modal-content-border-color:     rgba($black, .2) !default;\r\n$modal-content-border-width:     $border-width !default;\r\n$modal-content-box-shadow-xs:    0 .25rem .5rem rgba($black, .5) !default;\r\n$modal-content-box-shadow-sm-up: 0 .5rem 1rem rgba($black, .5) !default;\r\n\r\n$modal-backdrop-bg:           $black !default;\r\n$modal-backdrop-opacity:      .5 !default;\r\n$modal-header-border-color:   $gray-200 !default;\r\n$modal-footer-border-color:   $modal-header-border-color !default;\r\n$modal-header-border-width:   $modal-content-border-width !default;\r\n$modal-footer-border-width:   $modal-header-border-width !default;\r\n$modal-header-padding:        1rem !default;\r\n\r\n$modal-lg:                          800px !default;\r\n$modal-md:                          500px !default;\r\n$modal-sm:                          300px !default;\r\n\r\n$modal-transition:                  transform .3s ease-out !default;\r\n\r\n\r\n// Alerts\r\n//\r\n// Define alert colors, border radius, and padding.\r\n\r\n$alert-padding-y:                   .75rem !default;\r\n$alert-padding-x:                   1.25rem !default;\r\n$alert-margin-bottom:               1rem !default;\r\n$alert-border-radius:               $border-radius !default;\r\n$alert-link-font-weight:            $font-weight-bold !default;\r\n$alert-border-width:                $border-width !default;\r\n\r\n$alert-bg-level:                    -10 !default;\r\n$alert-border-level:                -9 !default;\r\n$alert-color-level:                 6 !default;\r\n\r\n\r\n// Progress bars\r\n\r\n$progress-height:                   1rem !default;\r\n$progress-font-size:                ($font-size-base * .75) !default;\r\n$progress-bg:                       $gray-200 !default;\r\n$progress-border-radius:            $border-radius !default;\r\n$progress-box-shadow:               inset 0 .1rem .1rem rgba($black, .1) !default;\r\n$progress-bar-color:                $white !default;\r\n$progress-bar-bg:                   theme-color(\"primary\") !default;\r\n$progress-bar-animation-timing:     1s linear infinite !default;\r\n$progress-bar-transition:           width .6s ease !default;\r\n\r\n// List group\r\n\r\n$list-group-bg:                     $white !default;\r\n$list-group-border-color:           rgba($black, .125) !default;\r\n$list-group-border-width:           $border-width !default;\r\n$list-group-border-radius:          $border-radius !default;\r\n\r\n$list-group-item-padding-y:         .75rem !default;\r\n$list-group-item-padding-x:         1.25rem !default;\r\n\r\n$list-group-hover-bg:               $gray-100 !default;\r\n$list-group-active-color:           $component-active-color !default;\r\n$list-group-active-bg:              $component-active-bg !default;\r\n$list-group-active-border-color:    $list-group-active-bg !default;\r\n\r\n$list-group-disabled-color:         $gray-600 !default;\r\n$list-group-disabled-bg:            $list-group-bg !default;\r\n\r\n$list-group-action-color:           $gray-700 !default;\r\n$list-group-action-hover-color:     $list-group-action-color !default;\r\n\r\n$list-group-action-active-color:    $body-color !default;\r\n$list-group-action-active-bg:       $gray-200 !default;\r\n\r\n\r\n// Image thumbnails\r\n\r\n$thumbnail-padding:                 .25rem !default;\r\n$thumbnail-bg:                      $body-bg !default;\r\n$thumbnail-border-width:            $border-width !default;\r\n$thumbnail-border-color:            $gray-300 !default;\r\n$thumbnail-border-radius:           $border-radius !default;\r\n$thumbnail-box-shadow:              0 1px 2px rgba($black, .075) !default;\r\n\r\n\r\n// Figures\r\n\r\n$figure-caption-font-size:          90% !default;\r\n$figure-caption-color:              $gray-600 !default;\r\n\r\n\r\n// Breadcrumbs\r\n\r\n$breadcrumb-padding-y:              .75rem !default;\r\n$breadcrumb-padding-x:              1rem !default;\r\n$breadcrumb-item-padding:           .5rem !default;\r\n\r\n$breadcrumb-margin-bottom:          1rem !default;\r\n\r\n$breadcrumb-bg:                     $gray-200 !default;\r\n$breadcrumb-divider-color:          $gray-600 !default;\r\n$breadcrumb-active-color:           $gray-600 !default;\r\n$breadcrumb-divider:                \" \";\r\n\r\n\r\n// Carousel\r\n\r\n$carousel-control-color:            $white !default;\r\n$carousel-control-width:            15% !default;\r\n$carousel-control-opacity:          .5 !default;\r\n\r\n$carousel-indicator-width:          30px !default;\r\n$carousel-indicator-height:         3px !default;\r\n$carousel-indicator-spacer:         3px !default;\r\n$carousel-indicator-active-bg:      $white !default;\r\n\r\n$carousel-caption-width:            70% !default;\r\n$carousel-caption-color:            $white !default;\r\n\r\n$carousel-control-icon-width:       20px !default;\r\n\r\n$carousel-control-prev-icon-bg:     str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n$carousel-control-next-icon-bg:     str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\r\n\r\n$carousel-transition:               transform .6s ease !default;\r\n\r\n\r\n// Close\r\n\r\n$close-font-size:                   $font-size-base * 1.5 !default;\r\n$close-font-weight:                 $font-weight-bold !default;\r\n$close-color:                       $black !default;\r\n$close-text-shadow:                 0 1px 0 $white !default;\r\n\r\n// Code\r\n\r\n$code-font-size:                    87.5% !default;\r\n$code-color:                        $pink !default;\r\n\r\n$kbd-padding-y:                     .2rem !default;\r\n$kbd-padding-x:                     .4rem !default;\r\n$kbd-font-size:                     $code-font-size !default;\r\n$kbd-color:                         $white !default;\r\n$kbd-bg:                            $gray-900 !default;\r\n\r\n$pre-color:                         $gray-900 !default;\r\n$pre-scrollable-max-height:         340px !default;\r\n\r\n\r\n// Printing\r\n$print-page-size:                   a3 !default;\r\n$print-body-min-width:              map-get($grid-breakpoints, \"lg\") !default;\r\n",
		"// Toggles\r\n//\r\n// Used in conjunction with global variables to enable certain theme features.\r\n\r\n// Utilities\r\n@import \"mixins/breakpoints\";\r\n@import \"mixins/hover\";\r\n@import \"mixins/image\";\r\n@import \"mixins/badge\";\r\n@import \"mixins/resize\";\r\n@import \"mixins/screen-reader\";\r\n@import \"mixins/size\";\r\n@import \"mixins/reset-text\";\r\n@import \"mixins/text-emphasis\";\r\n@import \"mixins/text-hide\";\r\n@import \"mixins/text-truncate\";\r\n@import \"mixins/visibility\";\r\n\r\n// // Components\r\n@import \"mixins/alert\";\r\n@import \"mixins/buttons\";\r\n@import \"mixins/caret\";\r\n@import \"mixins/pagination\";\r\n@import \"mixins/lists\";\r\n@import \"mixins/list-group\";\r\n@import \"mixins/nav-divider\";\r\n@import \"mixins/forms\";\r\n@import \"mixins/table-row\";\r\n\r\n// // Skins\r\n@import \"mixins/background-variant\";\r\n@import \"mixins/border-radius\";\r\n@import \"mixins/box-shadow\";\r\n@import \"mixins/gradients\";\r\n@import \"mixins/transition\";\r\n\r\n// // Layout\r\n@import \"mixins/clearfix\";\r\n// @import \"mixins/navbar-align\";\r\n@import \"mixins/grid-framework\";\r\n@import \"mixins/grid\";\r\n@import \"mixins/float\";\r\n",
		"// Breakpoint viewport sizes and media queries.\r\n//\r\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\r\n//\r\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\r\n//\r\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\r\n\r\n// Name of the next breakpoint, or null for the last breakpoint.\r\n//\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n  $n: index($breakpoint-names, $name);\r\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//\r\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    576px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n  $min: map-get($breakpoints, $name);\r\n  @return if($min != 0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\r\n// The maximum value is calculated as the minimum of the next one less 0.02px\r\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    767.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n  $next: breakpoint-next($name, $breakpoints);\r\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\r\n// Useful for making responsive utilities.\r\n//\r\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\r\n  $min: breakpoint-min($name, $breakpoints);\r\n  @if $min {\r\n    @media (min-width: $min) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\r\n  $max: breakpoint-max($name, $breakpoints);\r\n  @if $max {\r\n    @media (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n  $min: breakpoint-min($lower, $breakpoints);\r\n  $max: breakpoint-max($upper, $breakpoints);\r\n\r\n  @if $min != null and $max != null {\r\n    @media (min-width: $min) and (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else if $max == null {\r\n    @include media-breakpoint-up($lower, $breakpoints) {\r\n      @content;\r\n    }\r\n  } @else if $min == null {\r\n    @include media-breakpoint-down($upper, $breakpoints) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\r\n  $min: breakpoint-min($name, $breakpoints);\r\n  $max: breakpoint-max($name, $breakpoints);\r\n\r\n  @if $min != null and $max != null {\r\n    @media (min-width: $min) and (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else if $max == null {\r\n    @include media-breakpoint-up($name, $breakpoints) {\r\n      @content;\r\n    }\r\n  } @else if $min == null {\r\n    @include media-breakpoint-down($name, $breakpoints) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"// stylelint-disable indentation\r\n\r\n// Hover mixin and `$enable-hover-media-query` are deprecated.\r\n//\r\n// Origally added during our alphas and maintained during betas, this mixin was\r\n// designed to prevent `:hover` stickiness on iOS—an issue where hover styles\r\n// would persist after initial touch.\r\n//\r\n// For backward compatibility, we've kept these mixins and updated them to\r\n// always return their regular psuedo-classes instead of a shimmed media query.\r\n//\r\n// Issue: https://github.com/twbs/bootstrap/issues/25195\r\n\r\n@mixin hover {\r\n  &:hover { @content; }\r\n}\r\n\r\n@mixin hover-focus {\r\n  &:hover,\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin plain-hover-focus {\r\n  &,\r\n  &:hover,\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin hover-focus-active {\r\n  &:hover,\r\n  &:focus,\r\n  &:active {\r\n    @content;\r\n  }\r\n}\r\n",
		"// Image Mixins\r\n// - Responsive image\r\n// - Retina image\r\n\r\n\r\n// Responsive image\r\n//\r\n// Keep images from scaling beyond the width of their parents.\r\n\r\n@mixin img-fluid {\r\n  // Part 1: Set a maximum relative to the parent\r\n  max-width: 100%;\r\n  // Part 2: Override the height to auto, otherwise images will be stretched\r\n  // when setting a width and height attribute on the img element.\r\n  height: auto;\r\n}\r\n\r\n\r\n// Retina image\r\n//\r\n// Short retina mixin for setting background-image and -size.\r\n\r\n// stylelint-disable indentation, media-query-list-comma-newline-after\r\n@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {\r\n  background-image: url($file-1x);\r\n\r\n  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,\r\n  // but doesn't convert dppx=>dpi.\r\n  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.\r\n  // Compatibility info: https://caniuse.com/#feat=css-media-resolution\r\n  @media only screen and (min-resolution: 192dpi), // IE9-11 don't support dppx\r\n  only screen and (min-resolution: 2dppx) { // Standardized\r\n    background-image: url($file-2x);\r\n    background-size: $width-1x $height-1x;\r\n  }\r\n}\r\n",
		"@mixin badge-variant($bg) {\r\n  color: color-yiq($bg);\r\n  background-color: $bg;\r\n\r\n  &[href] {\r\n    @include hover-focus {\r\n      color: color-yiq($bg);\r\n      text-decoration: none;\r\n      background-color: darken($bg, 10%);\r\n    }\r\n  }\r\n}\r\n",
		"// Resize anything\r\n\r\n@mixin resizable($direction) {\r\n  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`\r\n  resize: $direction; // Options: horizontal, vertical, both\r\n}\r\n",
		"// Only display content to screen readers\r\n//\r\n// See: http://a11yproject.com/posts/how-to-hide-content/\r\n// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/\r\n\r\n@mixin sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n\r\n// Use in conjunction with .sr-only to only display content when it's focused.\r\n//\r\n// Useful for \"Skip to main content\" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\r\n//\r\n// Credit: HTML5 Boilerplate\r\n\r\n@mixin sr-only-focusable {\r\n  &:active,\r\n  &:focus {\r\n    position: static;\r\n    width: auto;\r\n    height: auto;\r\n    overflow: visible;\r\n    clip: auto;\r\n    white-space: normal;\r\n    clip-path: none;\r\n  }\r\n}\r\n",
		"// Sizing shortcuts\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n",
		"@mixin reset-text {\r\n  font-family: $font-family-base;\r\n  // We deliberately do NOT reset font-size or word-wrap.\r\n  font-style: normal;\r\n  font-weight: $font-weight-normal;\r\n  line-height: $line-height-base;\r\n  text-align: left; // Fallback for where `start` is not supported\r\n  text-align: start; // stylelint-disable-line declaration-block-no-duplicate-properties\r\n  text-decoration: none;\r\n  text-shadow: none;\r\n  text-transform: none;\r\n  letter-spacing: normal;\r\n  word-break: normal;\r\n  word-spacing: normal;\r\n  white-space: normal;\r\n  line-break: auto;\r\n}\r\n",
		"// stylelint-disable declaration-no-important\r\n\r\n// Typography\r\n\r\n@mixin text-emphasis-variant($parent, $color) {\r\n  #{$parent} {\r\n    color: $color !important;\r\n  }\r\n  a#{$parent} {\r\n    @include hover-focus {\r\n      color: darken($color, 10%) !important;\r\n    }\r\n  }\r\n}\r\n",
		"// CSS image replacement\r\n@mixin text-hide() {\r\n  // stylelint-disable-next-line font-family-no-missing-generic-family-keyword\r\n  font: 0/0 a;\r\n  color: transparent;\r\n  text-shadow: none;\r\n  background-color: transparent;\r\n  border: 0;\r\n}\r\n",
		"// Text truncate\r\n// Requires inline-block or block for proper styling\r\n\r\n@mixin text-truncate() {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n",
		"// stylelint-disable declaration-no-important\r\n\r\n// Visibility\r\n\r\n@mixin invisible($visibility) {\r\n  visibility: $visibility !important;\r\n}\r\n",
		"@mixin alert-variant($background, $border, $color) {\r\n  color: $color;\r\n  @include gradient-bg($background);\r\n  border-color: $border;\r\n\r\n  hr {\r\n    border-top-color: darken($border, 5%);\r\n  }\r\n\r\n  .alert-link {\r\n    color: darken($color, 10%);\r\n  }\r\n}\r\n",
		"// Button variants\r\n//\r\n// Easily pump out default styles, as well as :hover, :focus, :active,\r\n// and disabled options for all buttons\r\n\r\n@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {\r\n  color: color-yiq($background);\r\n  @include gradient-bg($background);\r\n  border-color: $border;\r\n  @include box-shadow($btn-box-shadow);\r\n\r\n  @include hover {\r\n    color: color-yiq($hover-background);\r\n    @include gradient-bg($hover-background);\r\n    border-color: $hover-border;\r\n  }\r\n\r\n  &:focus,\r\n  &.focus {\r\n    // Avoid using mixin so we can pass custom focus shadow properly\r\n    @if $enable-shadows {\r\n      box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);\r\n    } @else {\r\n      box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);\r\n    }\r\n  }\r\n\r\n  // Disabled comes first so active can properly restyle\r\n  &.disabled,\r\n  &:disabled {\r\n    color: color-yiq($background);\r\n    background-color: $background;\r\n    border-color: $border;\r\n  }\r\n\r\n  &:not(:disabled):not(.disabled):active,\r\n  &:not(:disabled):not(.disabled).active,\r\n  .show > &.dropdown-toggle {\r\n    color: color-yiq($active-background);\r\n    background-color: $active-background;\r\n    @if $enable-gradients {\r\n      background-image: none; // Remove the gradient for the pressed/active state\r\n    }\r\n    border-color: $active-border;\r\n\r\n    &:focus {\r\n      // Avoid using mixin so we can pass custom focus shadow properly\r\n      @if $enable-shadows {\r\n        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);\r\n      } @else {\r\n        box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {\r\n  color: $color;\r\n  background-color: transparent;\r\n  background-image: none;\r\n  border-color: $color;\r\n\r\n  &:hover {\r\n    color: $color-hover;\r\n    background-color: $active-background;\r\n    border-color: $active-border;\r\n  }\r\n\r\n  &:focus,\r\n  &.focus {\r\n    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);\r\n  }\r\n\r\n  &.disabled,\r\n  &:disabled {\r\n    color: $color;\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:not(:disabled):not(.disabled):active,\r\n  &:not(:disabled):not(.disabled).active,\r\n  .show > &.dropdown-toggle {\r\n    color: color-yiq($active-background);\r\n    background-color: $active-background;\r\n    border-color: $active-border;\r\n\r\n    &:focus {\r\n      // Avoid using mixin so we can pass custom focus shadow properly\r\n      @if $enable-shadows and $btn-active-box-shadow != none {\r\n        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);\r\n      } @else {\r\n        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Button sizes\r\n@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {\r\n  padding: $padding-y $padding-x;\r\n  font-size: $font-size;\r\n  line-height: $line-height;\r\n  // Manually declare to provide an override to the browser default\r\n  @if $enable-rounded {\r\n    border-radius: $border-radius;\r\n  } @else {\r\n    border-radius: 0;\r\n  }\r\n}\r\n",
		"@mixin caret-down {\r\n  border-top: $caret-width solid;\r\n  border-right: $caret-width solid transparent;\r\n  border-bottom: 0;\r\n  border-left: $caret-width solid transparent;\r\n}\r\n\r\n@mixin caret-up {\r\n  border-top: 0;\r\n  border-right: $caret-width solid transparent;\r\n  border-bottom: $caret-width solid;\r\n  border-left: $caret-width solid transparent;\r\n}\r\n\r\n@mixin caret-right {\r\n  border-top: $caret-width solid transparent;\r\n  border-bottom: $caret-width solid transparent;\r\n  border-left: $caret-width solid;\r\n}\r\n\r\n@mixin caret-left {\r\n  border-top: $caret-width solid transparent;\r\n  border-right: $caret-width solid;\r\n  border-bottom: $caret-width solid transparent;\r\n}\r\n\r\n@mixin caret($direction: down) {\r\n  @if $enable-caret {\r\n    &::after {\r\n      display: inline-block;\r\n      width: 0;\r\n      height: 0;\r\n      margin-left: $caret-width * .85;\r\n      vertical-align: $caret-width * .85;\r\n      content: \"\";\r\n      @if $direction == down {\r\n        @include caret-down;\r\n      } @else if $direction == up {\r\n        @include caret-up;\r\n      } @else if $direction == right {\r\n        @include caret-right;\r\n      }\r\n    }\r\n\r\n    @if $direction == left {\r\n      &::after {\r\n        display: none;\r\n      }\r\n\r\n      &::before {\r\n        display: inline-block;\r\n        width: 0;\r\n        height: 0;\r\n        margin-right: $caret-width * .85;\r\n        vertical-align: $caret-width * .85;\r\n        content: \"\";\r\n        @include caret-left;\r\n      }\r\n    }\r\n\r\n    &:empty::after {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n}\r\n",
		"// Pagination\r\n\r\n@mixin pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {\r\n  .page-link {\r\n    padding: $padding-y $padding-x;\r\n    font-size: $font-size;\r\n    line-height: $line-height;\r\n  }\r\n\r\n  .page-item {\r\n    &:first-child {\r\n      .page-link {\r\n        @include border-left-radius($border-radius);\r\n      }\r\n    }\r\n    &:last-child {\r\n      .page-link {\r\n        @include border-right-radius($border-radius);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
		"// Lists\r\n\r\n// Unstyled keeps list items block level, just removes default browser padding and list-style\r\n@mixin list-unstyled {\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n",
		"// List Groups\r\n\r\n@mixin list-group-item-variant($state, $background, $color) {\r\n  .list-group-item-#{$state} {\r\n    color: $color;\r\n    background-color: $background;\r\n\r\n    &.list-group-item-action {\r\n      @include hover-focus {\r\n        color: $color;\r\n        background-color: darken($background, 5%);\r\n      }\r\n\r\n      &.active {\r\n        color: #fff;\r\n        background-color: $color;\r\n        border-color: $color;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
		"// Horizontal dividers\r\n//\r\n// Dividers (basically an hr) within dropdowns and nav lists\r\n\r\n@mixin nav-divider($color: #e5e5e5) {\r\n  height: 0;\r\n  margin: ($spacer / 2) 0;\r\n  overflow: hidden;\r\n  border-top: 1px solid $color;\r\n}\r\n",
		"// Form control focus state\r\n//\r\n// Generate a customized focus state and for any input with the specified color,\r\n// which defaults to the `$input-focus-border-color` variable.\r\n//\r\n// We highly encourage you to not customize the default value, but instead use\r\n// this to tweak colors on an as-needed basis. This aesthetic change is based on\r\n// WebKit's default styles, but applicable to a wider range of browsers. Its\r\n// usability and accessibility should be taken into account with any change.\r\n//\r\n// Example usage: change the default blue border and shadow to white for better\r\n// contrast against a dark gray background.\r\n@mixin form-control-focus() {\r\n  &:focus {\r\n    color: $input-focus-color;\r\n    background-color: $input-focus-bg;\r\n    border-color: $input-focus-border-color;\r\n    outline: 0;\r\n    // Avoid using mixin so we can pass custom focus shadow properly\r\n    @if $enable-shadows {\r\n      box-shadow: $input-box-shadow, $input-focus-box-shadow;\r\n    } @else {\r\n      box-shadow: $input-focus-box-shadow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@mixin form-validation-state($state, $color) {\r\n  .#{$state}-feedback {\r\n    display: none;\r\n    width: 100%;\r\n    margin-top: $form-feedback-margin-top;\r\n    font-size: $form-feedback-font-size;\r\n    color: $color;\r\n  }\r\n\r\n  .#{$state}-tooltip {\r\n    position: absolute;\r\n    top: 100%;\r\n    z-index: 5;\r\n    display: none;\r\n    max-width: 100%; // Contain to parent when possible\r\n    padding: .5rem;\r\n    margin-top: .1rem;\r\n    font-size: .875rem;\r\n    line-height: 1;\r\n    color: #fff;\r\n    background-color: rgba($color, .8);\r\n    border-radius: .2rem;\r\n  }\r\n\r\n  .form-control,\r\n  .custom-select {\r\n    .was-validated &:#{$state},\r\n    &.is-#{$state} {\r\n      border-color: $color;\r\n\r\n      &:focus {\r\n        border-color: $color;\r\n        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);\r\n      }\r\n\r\n      ~ .#{$state}-feedback,\r\n      ~ .#{$state}-tooltip {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  .form-check-input {\r\n    .was-validated &:#{$state},\r\n    &.is-#{$state} {\r\n      ~ .form-check-label {\r\n        color: $color;\r\n      }\r\n\r\n      ~ .#{$state}-feedback,\r\n      ~ .#{$state}-tooltip {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  .custom-control-input {\r\n    .was-validated &:#{$state},\r\n    &.is-#{$state} {\r\n      ~ .custom-control-label {\r\n        color: $color;\r\n\r\n        &::before {\r\n          background-color: lighten($color, 25%);\r\n        }\r\n      }\r\n\r\n      ~ .#{$state}-feedback,\r\n      ~ .#{$state}-tooltip {\r\n        display: block;\r\n      }\r\n\r\n      &:checked {\r\n        ~ .custom-control-label::before {\r\n          @include gradient-bg(lighten($color, 10%));\r\n        }\r\n      }\r\n\r\n      &:focus {\r\n        ~ .custom-control-label::before {\r\n          box-shadow: 0 0 0 1px $body-bg, 0 0 0 $input-focus-width rgba($color, .25);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // custom file\r\n  .custom-file-input {\r\n    .was-validated &:#{$state},\r\n    &.is-#{$state} {\r\n      ~ .custom-file-label {\r\n        border-color: $color;\r\n\r\n        &::before { border-color: inherit; }\r\n      }\r\n\r\n      ~ .#{$state}-feedback,\r\n      ~ .#{$state}-tooltip {\r\n        display: block;\r\n      }\r\n\r\n      &:focus {\r\n        ~ .custom-file-label {\r\n          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
		"// Tables\r\n\r\n@mixin table-row-variant($state, $background) {\r\n  // Exact selectors below required to override `.table-striped` and prevent\r\n  // inheritance to nested tables.\r\n  .table-#{$state} {\r\n    &,\r\n    > th,\r\n    > td {\r\n      background-color: $background;\r\n    }\r\n  }\r\n\r\n  // Hover states for `.table-hover`\r\n  // Note: this is not available for cells or rows within `thead` or `tfoot`.\r\n  .table-hover {\r\n    $hover-background: darken($background, 5%);\r\n\r\n    .table-#{$state} {\r\n      @include hover {\r\n        background-color: $hover-background;\r\n\r\n        > td,\r\n        > th {\r\n          background-color: $hover-background;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
		"// stylelint-disable declaration-no-important\r\n\r\n// Contextual backgrounds\r\n\r\n@mixin bg-variant($parent, $color) {\r\n  #{$parent} {\r\n    background-color: $color !important;\r\n  }\r\n  a#{$parent},\r\n  button#{$parent} {\r\n    @include hover-focus {\r\n      background-color: darken($color, 10%) !important;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin bg-gradient-variant($parent, $color) {\r\n  #{$parent} {\r\n    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x !important;\r\n  }\r\n}\r\n",
		"// Single side border-radius\r\n\r\n@mixin border-radius($radius: $border-radius) {\r\n  @if $enable-rounded {\r\n    border-radius: $radius;\r\n  }\r\n}\r\n\r\n@mixin border-top-radius($radius) {\r\n  @if $enable-rounded {\r\n    border-top-left-radius: $radius;\r\n    border-top-right-radius: $radius;\r\n  }\r\n}\r\n\r\n@mixin border-right-radius($radius) {\r\n  @if $enable-rounded {\r\n    border-top-right-radius: $radius;\r\n    border-bottom-right-radius: $radius;\r\n  }\r\n}\r\n\r\n@mixin border-bottom-radius($radius) {\r\n  @if $enable-rounded {\r\n    border-bottom-right-radius: $radius;\r\n    border-bottom-left-radius: $radius;\r\n  }\r\n}\r\n\r\n@mixin border-left-radius($radius) {\r\n  @if $enable-rounded {\r\n    border-top-left-radius: $radius;\r\n    border-bottom-left-radius: $radius;\r\n  }\r\n}\r\n",
		"@mixin box-shadow($shadow...) {\r\n  @if $enable-shadows {\r\n    box-shadow: $shadow;\r\n  }\r\n}\r\n",
		"// Gradients\r\n\r\n@mixin gradient-bg($color) {\r\n  @if $enable-gradients {\r\n    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;\r\n  } @else {\r\n    background-color: $color;\r\n  }\r\n}\r\n\r\n// Horizontal gradient, from left to right\r\n//\r\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\r\n@mixin gradient-x($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {\r\n  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n// Vertical gradient, from top to bottom\r\n//\r\n// Creates two color stops, start and end, by specifying a color and position for each color stop.\r\n@mixin gradient-y($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {\r\n  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {\r\n  background-image: linear-gradient($deg, $start-color, $end-color);\r\n  background-repeat: repeat-x;\r\n}\r\n@mixin gradient-x-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {\r\n  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);\r\n  background-repeat: no-repeat;\r\n}\r\n@mixin gradient-y-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {\r\n  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);\r\n  background-repeat: no-repeat;\r\n}\r\n@mixin gradient-radial($inner-color: #555, $outer-color: #333) {\r\n  background-image: radial-gradient(circle, $inner-color, $outer-color);\r\n  background-repeat: no-repeat;\r\n}\r\n@mixin gradient-striped($color: rgba(255,255,255,.15), $angle: 45deg) {\r\n  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);\r\n}\r\n",
		"@mixin transition($transition...) {\r\n  @if $enable-transitions {\r\n    @if length($transition) == 0 {\r\n      transition: $transition-base;\r\n    } @else {\r\n      transition: $transition;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin clearfix() {\r\n  &::after {\r\n    display: block;\r\n    clear: both;\r\n    content: \"\";\r\n  }\r\n}\r\n",
		"// Framework grid generation\r\n//\r\n// Used only by Bootstrap to generate the correct number of grid classes given\r\n// any value of `$grid-columns`.\r\n\r\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\r\n  // Common properties for all breakpoints\r\n  %grid-column {\r\n    position: relative;\r\n    width: 100%;\r\n    min-height: 1px; // Prevent columns from collapsing when empty\r\n    padding-right: ($gutter / 2);\r\n    padding-left: ($gutter / 2);\r\n  }\r\n\r\n  @each $breakpoint in map-keys($breakpoints) {\r\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\r\n\r\n    // Allow columns to stretch full width below their breakpoints\r\n    @for $i from 1 through $columns {\r\n      .col#{$infix}-#{$i} {\r\n        @extend %grid-column;\r\n      }\r\n    }\r\n    .col#{$infix},\r\n    .col#{$infix}-auto {\r\n      @extend %grid-column;\r\n    }\r\n\r\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\r\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\r\n      .col#{$infix} {\r\n        flex-basis: 0;\r\n        flex-grow: 1;\r\n        max-width: 100%;\r\n      }\r\n      .col#{$infix}-auto {\r\n        flex: 0 0 auto;\r\n        width: auto;\r\n        max-width: none; // Reset earlier grid tiers\r\n      }\r\n\r\n      @for $i from 1 through $columns {\r\n        .col#{$infix}-#{$i} {\r\n          @include make-col($i, $columns);\r\n        }\r\n      }\r\n\r\n      .order#{$infix}-first { order: -1; }\r\n\r\n      .order#{$infix}-last { order: $columns + 1; }\r\n\r\n      @for $i from 0 through $columns {\r\n        .order#{$infix}-#{$i} { order: $i; }\r\n      }\r\n\r\n      // `$columns - 1` because offsetting by the width of an entire row isn't possible\r\n      @for $i from 0 through ($columns - 1) {\r\n        @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\r\n          .offset#{$infix}-#{$i} {\r\n            @include make-col-offset($i, $columns);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
		"/// Grid system\r\n//\r\n// Generate semantic grid columns with these mixins.\r\n\r\n@mixin make-container() {\r\n  width: 100%;\r\n  padding-right: ($grid-gutter-width / 2);\r\n  padding-left: ($grid-gutter-width / 2);\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n\r\n// For each breakpoint, define the maximum width of the container in a media query\r\n@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {\r\n  @each $breakpoint, $container-max-width in $max-widths {\r\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\r\n      max-width: $container-max-width;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin make-row() {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-right: ($grid-gutter-width / -2);\r\n  margin-left: ($grid-gutter-width / -2);\r\n}\r\n\r\n@mixin make-col-ready() {\r\n  position: relative;\r\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\r\n  // always setting `width: 100%;`. This works because we use `flex` values\r\n  // later on to override this initial width.\r\n  width: 100%;\r\n  min-height: 1px; // Prevent collapsing\r\n  padding-right: ($grid-gutter-width / 2);\r\n  padding-left: ($grid-gutter-width / 2);\r\n}\r\n\r\n@mixin make-col($size, $columns: $grid-columns) {\r\n  flex: 0 0 percentage($size / $columns);\r\n  // Add a `max-width` to ensure content within each column does not blow out\r\n  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\r\n  // do not appear to require this.\r\n  max-width: percentage($size / $columns);\r\n}\r\n\r\n@mixin make-col-offset($size, $columns: $grid-columns) {\r\n  $num: $size / $columns;\r\n  margin-left: if($num == 0, 0, percentage($num));\r\n}\r\n",
		"// stylelint-disable declaration-no-important\r\n\r\n@mixin float-left {\r\n  float: left !important;\r\n}\r\n@mixin float-right {\r\n  float: right !important;\r\n}\r\n@mixin float-none {\r\n  float: none !important;\r\n}\r\n",
		"// stylelint-disable selector-no-qualifying-type\r\n\r\n.fade {\r\n  opacity: 0;\r\n  @include transition($transition-fade);\r\n\r\n  &.show {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.collapse {\r\n  display: none;\r\n  &.show {\r\n    display: block;\r\n  }\r\n}\r\n\r\ntr {\r\n  &.collapse.show {\r\n    display: table-row;\r\n  }\r\n}\r\n\r\ntbody {\r\n  &.collapse.show {\r\n    display: table-row-group;\r\n  }\r\n}\r\n\r\n.collapsing {\r\n  position: relative;\r\n  height: 0;\r\n  overflow: hidden;\r\n  @include transition($transition-collapse);\r\n}\r\n",
		"/* =============================================================================\r\n   Individual Colors\r\n   ========================================================================== */\r\n$blue:          #159EE5;\r\n$pink:          #FF77A5;\r\n$yellow:        #FF9A34;\r\n$green:         #00B470;\r\n$teal:          #20c997;\r\n$cyan:          #17a2b8;\r\n$lime:          #B59EFF;\r\n\r\n$logoBlue:      #406584;\r\n$darkerBlue:    darken($blue,5%);\r\n$darkerYellow:  darken($yellow,5%);\r\n$darkerPink:    darken($pink,5%);\r\n$darkerGreen:   darken($green,5%);\r\n\r\n$niceGrey:      #404c5a;\r\n$blueGrey:      #495f7f;\r\n\r\n$theme-colors: (\r\n  \"primary\":    $niceGrey,\r\n  \"secondary\":  $pink,\r\n  \"success\":    $green,\r\n  \"info\":       $info,\r\n  \"warning\":    $warning,\r\n  \"danger\":     $danger,\r\n  \"light\":      $light,\r\n  \"dark\":       $dark\r\n);\r\n\r\n$body-bg:       #FAFAFA ;\r\n$body-color:    #333 ;\r\n\r\n$border-radius:               1.2em;\r\n$border-radius-lg:            1.4em;\r\n$border-radius-sm:            1em;\r\n\r\n$paragraph-margin-bottom:     1.4rem;\r\n\r\n$font-family-sans-serif:      \"Muli\", Arial, sans-serif;\r\n$font-family-base:            $font-family-sans-serif;\r\n\r\n$font-size-xs:                ($font-size-base * .5) !default;\r\n\r\n$h1-font-size:                $font-size-base * 2.4;\r\n$h2-font-size:                $font-size-base * 1.6;\r\n$h3-font-size:                $font-size-base * 1.5;\r\n\r\n$headings-font-family:        \"Lato\", Arial, sans-serif;\r\n$headings-font-weight:        600;\r\n$headings-line-height:        1.1;\r\n$headings-color:              inherit !default;\r\n\r\n\r\n$input-btn-padding-y:         1em;\r\n$input-btn-padding-x:         1em;\r\n\r\n$input-btn-border-width:      0;\r\n\r\n//Navbar\r\n$navbar-padding-y:              0;\r\n$navbar-padding-x:              0;\r\n$navbar-toggler-padding-y:      0rem;\r\n$navbar-toggler-padding-x:      0rem;\r\n\r\n$dropdown-border-width:         0;\r\n$dropdown-link-color:           white;\r\n$dropdown-link-hover-color:     white;\r\n$dropdown-link-hover-bg:        transparent;\r\n$dropdown-link-active-color:    white;\r\n$dropdown-header-color:         inherit;\r\n\r\n/*$dropdown-padding-y:             0;*/\r\n$dropdown-item-padding-y:       1rem;\r\n$dropdown-item-padding-x:       1.5rem;\r\n\r\n//Breadcrumb\r\n$breadcrumb-bg:                transparent;\r\n$breadcrumb-padding-y:         0;\r\n$breadcrumb-padding-x:         0;\r\n$breadcrumb-divider:                \" \" !default;\r\n$breadcrumb-item-padding:           .25rem;\r\n\r\n// Nav-Tabs\r\n$nav-tabs-border-color:         transparent;\r\n$nav-tabs-border-width:         0;\r\n\r\n$nav-tabs-border-radius:        0;\r\n$nav-tabs-link-hover-border-color:  transparent;\r\n$nav-tabs-link-active-border-color: transparent;\r\n$nav-tabs-link-active-color:        inherit;\r\n$nav-tabs-link-active-bg:           inherit;\r\n\r\n//Lists\r\n$list-group-bg:                 transparent;\r\n$list-group-hover-bg:           inherit;\r\n$list-group-border-color:       currentColor;\r\n$list-group-border-width:       1px;\r\n\r\n\r\n//Cards\r\n$card-border-radius:             2rem;\r\n/*$card-bg:                        white;*/\r\n\r\n\r\n//Modals\r\n$zindex-modal:                   9999;\r\n\r\n//Buttons\r\n$btn-border-width:            0;\r\n/*$btn-border-radius:           $border-radius !default;*/\r\n$btn-border-radius-lg:        2rem;\r\n$btn-border-radius-sm:        1rem;\r\n",
		"/** Globals **/\r\n@mixin text-indent {\r\n    text-indent:-9999px;\r\n    display:block;\r\n    overflow:hidden;\r\n}\r\n@mixin simple-flex-square-grid{\r\n    @include flex-grow(1);\r\n    > *{\r\n        @include flex(1);\r\n    }\r\n    > *:last-child{\r\n        @include flex-grow(0);\r\n        @include flex-shrink(0);  \r\n    }\r\n}\r\n@mixin list-icon-style($size){\r\n    @include size($size);\r\n    font-size:$size;\r\n}\r\n@mixin icon-style ($cnt, $pd-ri, $op, $mg-le, $size) {\r\n    font-family: 'FontAwesome';\r\n    content: $cnt !important;\r\n    padding-right: $pd-ri;\r\n    opacity: $op;\r\n    margin-left:$mg-le;\r\n    font-size:$size;\r\n    speak: none;\r\n}\r\n@mixin gradient-overlay{\r\n     &:before{\r\n            content:'';\r\n            position:absolute;\r\n            top:0;\r\n            bottom:0;\r\n            left:0;\r\n            right:0;\r\n            /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#000000+0,000000+100&0+48,0.65+100 */\r\nbackground: -moz-linear-gradient(top, rgba(0,0,0,0) 0%, rgba(0,0,0,0) 48%, rgba(0,0,0,0.65) 100%); /* FF3.6-15 */\r\nbackground: -webkit-linear-gradient(top, rgba(0,0,0,0) 0%,rgba(0,0,0,0) 48%,rgba(0,0,0,0.65) 100%); /* Chrome10-25,Safari5.1-6 */\r\nbackground: linear-gradient(to bottom, rgba(0,0,0,0) 0%,rgba(0,0,0,0) 48%,rgba(0,0,0,0.65) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00000000', endColorstr='#a6000000',GradientType=0 ); /* IE6-9 */\r\n            opacity:.5;\r\n        }\r\n}\r\n@mixin square-caption-overlay($size-lg){\r\n        figure{\r\n        position:relative;\r\n        @include size($size-lg);\r\n        overflow:hidden;\r\n \r\n        > figcaption{\r\n           position:absolute; \r\n           top:-$size-lg;\r\n           font-size:larger;\r\n                       padding:1vW;\r\n            font-weight:bold;\r\n            text-align:center;\r\n           @include display(flex);\r\n           @include flex-direction(row);\r\n           @include justify-content(center);\r\n           @include align-items(center);\r\n           \r\n           [data-icon]{\r\n               display:block;\r\n               margin:0 auto;\r\n           }\r\n        }\r\n        &:hover, &:focus {\r\n            cursor:pointer;\r\n            > figcaption{\r\n            top:0;\r\n            left:0;\r\n            bottom:0;\r\n            right:0;\r\n            color:white;\r\n            background:rgba(0,0,0,.7);\r\n            @include transition(top 200ms ease-out);\r\n        }\r\n        }\r\n    }\r\n}\r\n/** Individual Layouts**/\r\n@mixin white-logo($height, $pos-y, $pos-x){\r\n    min-height:$height;\r\n    text-indent: -99999px;\r\n    background: transparent url(../img/logo-white.png) no-repeat $pos-y $pos-x / contain;\r\n}\r\n@mixin truncate($width){\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow:hidden;\r\n    width:$width;\r\n}\r\n/** Colors **/\r\n$categories: (\r\n    blue: #159EE5,\r\n    pink: #FF77A5,\r\n    yellow: #FF9A34,\r\n    green: #00B470,\r\n);\r\n/** Color per category**/\r\n@mixin category-backgrounds{\r\n    .cat-blue &{background:$blue;}\r\n    .cat-yellow &{background:$yellow;}\r\n    .cat-pink &{background:$pink;}\r\n    .cat-green &{background:$green;}\r\n}\r\n@mixin category-color{\r\n    .cat-blue &{color:$blue;}\r\n    .cat-yellow &{color:$yellow;}\r\n    .cat-pink &{color:$pink;}\r\n    .cat-green &{color:$green;}\r\n}\r\n@mixin category-border($width, $style){\r\n    border:{\r\n        width:$width;\r\n        style:$style;\r\n    }\r\n    .cat-blue &{border-color:$blue;}\r\n    .cat-yellow &{border-color:$yellow;}\r\n    .cat-pink &{border-color:$pink;}\r\n    .cat-green &{border-color:$green;}\r\n}\r\n/** Multiple & Alternating ***/\r\n@mixin multiple-border($height, $margin, $width){\r\n    content:'';\r\n    height:$height;\r\n    margin:$margin;\r\n    width:$width;\r\n    display: block;\r\n    background: linear-gradient(to right, $blue 0%, $blue 25%, $yellow 25%, $yellow 50%, $pink 50%, $pink 75%, $green 75%, $green 100%);\r\n}\r\n/**Alternate Colors**/\r\n@mixin alternate-bg-colors{\r\n    li:nth-child(4n+1) &{\r\n        background:$blue;\r\n    }\r\n    li:nth-child(4n+2) &{\r\n        background:$yellow;\r\n    }\r\n    li:nth-child(4n+3) &{\r\n        background:$pink;\r\n    }\r\n    li:nth-child(4n+4) &{\r\n        background:$green;\r\n    }\r\n}\r\n@mixin alternate-color{\r\n    //number of alternating colors(n) + the position\r\n    li:nth-child(4n+1) &{\r\n        color:$blue;\r\n    }\r\n    li:nth-child(4n+2) &{\r\n        color:$yellow;\r\n    }\r\n    li:nth-child(4n+3) &{\r\n        color:$pink;\r\n    }\r\n    li:nth-child(4n+4) &{\r\n        color:$green;\r\n    }\r\n}\r\n@mixin mega-menu{\r\n    @include shadow;\r\n    &:before{\r\n        content:'';\r\n        top: 0;\r\n        left:1rem;\r\n        position: absolute;\r\n        display: block;\r\n        width: 0px;\r\n        height: 0px;\r\n        border-style: solid;\r\n        border-width: 1em; \r\n    }\r\n}\r\n@mixin mega-menu-cat-style($bg-col, $color){\r\n    background-color: $bg-col !important;\r\n    &:before{\r\n        border-color: transparent transparent $bg-col transparent;\r\n    }\r\n    .dropdown-header{\r\n        padding-bottom: .5rem;\r\n        border-bottom:2px solid $color;\r\n    }\r\n    .sub-cats li > a{\r\n        &:hover{\r\n            text-decoration: underline;\r\n        }\r\n        &:hover,\r\n        &:before{\r\n            color:$color;\r\n        }\r\n    }\r\n}\r\n@mixin fallback-svg-bg-image{\r\n    background:{\r\n                color:transparent;\r\n                image:url(../img/logo-large.svg);\r\n                repeat:no-repeat;\r\n                position: right center;\r\n                size:auto 100%;\r\n                margin-right: 1rem;\r\n            }\r\n            .no-svg &{\r\n                background-image:url(../img/logo-large.png);  \r\n            }\r\n}\r\n@mixin logo-bg-image{\r\n    background:{\r\n                color:transparent;\r\n                image:url(../img/logo-large.png);\r\n                repeat:no-repeat;\r\n                position: right center;\r\n                size:auto 100%;\r\n                margin-right: 1rem;\r\n            }\r\n            @media(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){\r\n                background-image:url(../img/logo-large@2x.png);  \r\n            }\r\n}",
		"/*** Sidebar ***/\r\n#infoblock{\r\n    @include transition(all 400ms ease-out);\r\n    [id*=\"btn\"]{\r\n        margin: 0 0 1px 0;\r\n        padding: 1em .5em;\r\n        &:hover,\r\n            &:focus{\r\n            cursor:pointer;\r\n        }\r\n        &[class*=\"cat\"]{\r\n            color:white;\r\n        }\r\n        @each $name, $value in $categories {\r\n            &.cat-#{$name}{\r\n            background-color: $value;\r\n        }\r\n        }\r\n    }\r\n    [id*=\"collapse\"]{\r\n        @include media-breakpoint-up(lg) {display:block;}\r\n    }\r\n    @include media-breakpoint-up(md){\r\n        &[class*=\"js-is-\"]{top:100px !important;}  \r\n    }\r\n    @include media-breakpoint-down(md) {\r\n        margin:1em 0;\r\n        @include border-top-radius(1.2em);\r\n        @include border-bottom-radius(1.2em);\r\n        overflow:hidden;\r\n    }\r\n    @include media-breakpoint-down(xs) {\r\n        &[class*=\"js-is-\"]{\r\n            position:fixed !important;\r\n            top:60px !important;\r\n            left:0;\r\n            right:0;\r\n            background:white;\r\n            z-index:999;\r\n        }\r\n    }\r\n}",
		".tagcloud{\r\n    ul{\r\n        margin:0;\r\n        padding:0;\r\n    }\r\n    ul, li{\r\n        list-style:none;\r\n        font-size:1.2rem;\r\n        color:white;\r\n    }\r\n    li{\r\n        display: inline-block;\r\n        margin: 0 0 .3em 1em;\r\n        padding: 0; \r\n        a{\r\n            position: relative;\r\n            display: inline-block;\r\n            height: 40px;\r\n            line-height: 40px;\r\n            padding: 0 1em 0 .75em;\r\n            border-radius: 0 6px 6px 0;\r\n            text-decoration: none;\r\n            -webkit-transition: .2s;\r\n            transition: .2s;\r\n            \r\n            &:before, &:after{\r\n                position: absolute;\r\n                content: '';\r\n            }\r\n            &:before{\r\n                top: 0;\r\n                left: -20px;\r\n                z-index: -1;\r\n                width: 40px;\r\n                height: 40px; \r\n                border-radius: 50%;\r\n                -webkit-transition: .2s;\r\n                transition: .2s;  \r\n            }\r\n            &:after{\r\n                top: 50%;\r\n                left: -6px;\r\n                z-index: 2;\r\n                display: block;\r\n                width: 6px;\r\n                height: 6px;\r\n                margin-top: -3px;\r\n                background-color: white;\r\n                border-radius: 100%;\r\n            }\r\n            &:hover{\r\n\tbackground-color: $primary;\r\n}\r\n        }\r\n\r\n        &:nth-child(4n+1) a{\r\n            background:$blue;\r\n            &:before{background:$blue;}\r\n        }\r\n        &:nth-child(4n+2) a{\r\n            background:$yellow;\r\n            &:before{background:$yellow;}\r\n        }\r\n        &:nth-child(4n+3) a{\r\n            background:$pink;\r\n            &:before{background:$pink;}\r\n        }\r\n        &:nth-child(4n+4) a{\r\n            background:$green;\r\n            &:before{background:$green;}\r\n        }\r\n        span {\r\n            @include ellipsis(100px);\r\n            color:inherit;\r\n        }\r\n    }\r\n}\r\n#topicsBlock{\r\n    @include border-left-radius(2em);\r\n    @include border-right-radius(2em);\r\n    overflow:hidden;\r\n    [class*=\"col-\"]{padding:1em;}\r\n    [data-icon]{\r\n            font-size: 3rem;\r\n    margin-bottom: 1rem;\r\n    }\r\n    *{color:white;}\r\n    .cat-blue {background: $blue;}\r\n    .cat-yellow {background: $yellow;}\r\n    .cat-pink {background: $pink;}\r\n    .cat-green {background: $green;}\r\n    @include media-breakpoint-up(sm) {\r\n        margin-top:2rem;\r\n    }\r\n}\r\n.bubble{\r\n    position:relative;\r\n    @include border-top-radius(15px);\r\n    @include border-bottom-radius(15px);\r\n    background:$yellow;\r\n    color:white;\r\n    &:before{\r\n        content:'';\r\n        top: -48px;\r\n        position: absolute;\r\n        display: block;\r\n        width: 0px;\r\n        height: 0px;\r\n        border-style: solid;\r\n        border-width: 48px 0px 0 48px;\r\n        border-color: transparent transparent transparent $yellow;\r\n        left: 150px;\r\n    }\r\n    @include media-breakpoint-down(sm) {\r\n        margin-top:200px;\r\n        margin-bottom: 1rem;\r\n    }\r\n}\r\n\r\n.parallax{\r\n    background-repeat:no-repeat;\r\n    background-color:transparent;\r\n    background-size:cover;\r\n    background-attachment: fixed;\r\n\r\n    body[class*=\"cat\"] &{\r\n        background-image:url(../img/patrick-fore-358120-unsplash.jpg);\r\n        background-position:top left;\r\n        margin:2em 0 0 0;\r\n    }\r\n    &.cat-yellow &{\r\n        background-image:url(../img/img/look.jpg);\r\n        background-position:center center;\r\n        margin:0 0 2em 0;\r\n    }\r\n\r\n    [class*=\"col-\"]{padding:100px 0;}\r\n    &:before,&:after{\r\n        @include multiple-border(.3rem, 0, 100%);\r\n    }\r\n    * {\r\n        color:white;\r\n        font-weight:bold;\r\n    }\r\n}\r\n/**DEBUG**/\r\n/*#infoblock{\r\n    #home &{\r\n        > div{\r\n            @include last(5){\r\n                display:none !important;\r\n            }\r\n        }  \r\n    } \r\n}*/\r\n\r\n.modal-dialog{\r\n\r\n}\r\n.modal-body{\r\n    padding:2em;\r\n}\r\n.modal-header{\r\n    .has-image &{\r\n        padding:0;\r\n        height: 230px;\r\n        overflow: hidden;\r\n    }\r\n}",
		"/*==================================================*/\r\nbody > main{\r\n    @include media-breakpoint-up(md) {margin-top:6.25rem;}\r\n}\r\n\r\n.hero {\r\n    .row{\r\n         margin-bottom: -10vH;\r\n            padding-bottom: 5vH;\r\n    }\r\n    @media screen and (max-width:320px) {\r\n            min-height: 80vH;\r\n        }\r\n        @include media-breakpoint-down(xs) { \r\n            min-height: 70vH;\r\n        }\r\n        @include media-breakpoint-up(sm) { \r\n            min-height: 70vH;\r\n        }\r\n        @include media-breakpoint-up(md) { \r\n            min-height: 60vH;\r\n            #home & .bubble{\r\n                margin-bottom:-10vH;\r\n            }\r\n        }\r\n}"
	],
	"mappings": "AAAA;;;;;GAKG;AACH,yBAAyB;AAEzB,sBAAsB;AAKtB,wCAAwC;AgFbxC,6BAA6B;ACuB7B,+BAA+B;AAsE/B,iBAAiB;AAwCjB,gDAAgD;AA0DhD,qEAAqE;AA+CrE,uBAAuB;AAiBvB,qBAAqB;AA6BrB,kBAAkB;AASlB,mBAAmB;AjF9QnB,6BAA6B;AAE7B;;;;;;;;oBAQoB;;AmH/BpB,AAAA,KAAK,CAAC;EACJ,OAAO,EAAE,CAAE;ELEP,UAAU,E3BwNc,OAAO,CAAC,KAAI,CAAC,MAAM;CgCpNhD;;;AAPD,AAAA,KAAK,AAIF,KAAK,CAAC;EACL,OAAO,EAAE,CAAE;CACZ;;;AAGH,AAAA,SAAS,CAAC;EACR,OAAO,EAAE,IAAK;CAIf;;;AALD,AAAA,SAAS,AAEN,KAAK,CAAC;EACL,OAAO,EAAE,KAAM;CAChB;;;AAGH,AAAA,EAAE,AACC,SAAS,AAAA,KAAK,CAAC;EACd,OAAO,EAAE,SAAU;CACpB;;;AAGH,AAAA,KAAK,AACF,SAAS,AAAA,KAAK,CAAC;EACd,OAAO,EAAE,eAAgB;CAC1B;;;AAGH,AAAA,WAAW,CAAC;EACV,QAAQ,EAAE,QAAS;EACnB,MAAM,EAAE,CAAE;EACV,QAAQ,EAAE,MAAO;EL5Bb,UAAU,E3ByNc,MAAM,CAAC,KAAI,CAAC,IAAI;CgC3L7C;;AnHCD;;;;;;;;;;;;;;;;;;;;;;;;kBAwBkB;AoH5DlB;;gFAEgF;AAuEhF,uCAAuC;AA8BvC,2CAA2C;AAQ3C,0DAA0D;AC/G1D,eAAe;AAkFf,yBAAyB;AAYzB,cAAc;AAOd,yBAAyB;AAuBzB,+BAA+B;AAS/B,sBAAsB;ArHpEtB;;;;;;;;kCAQkC;AsHzElC,iBAAiB;;AACjB,AAAA,UAAU,CAAA;ERIJ,UAAU,EQHQ,GAAG,CAAC,KAAK,CAAC,QAAQ;CAuCzC;;;AAxCD,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,EAAU;EACP,MAAM,EAAE,SAAU;EAClB,OAAO,EAAE,QAAS;CAarB;;;AAjBL,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,CAGI,MAAM,EALf,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,CAIQ,MAAM,CAAA;EACP,MAAM,EAAC,OAAQ;CAClB;;;AART,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,EAOI,AAAA,KAAC,EAAO,KAAK,AAAZ,EAAa;EACX,KAAK,EAAC,KAAM;CACf;;;AAXT,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,CAWQ,SAAS,CAAV;EACA,gBAAgB,EDiFlB,OAAO;CChFR;;;AAfT,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,CAWQ,SAAS,CAAV;EACA,gBAAgB,EDkFlB,OAAO;CCjFR;;;AAfT,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,CAWQ,WAAW,CAAZ;EACA,gBAAgB,EDmFhB,OAAO;CClFV;;;AAfT,AAEc,UAFJ,EAEN,AAAA,EAAC,EAAI,KAAK,AAAT,CAWQ,UAAU,CAAX;EACA,gBAAgB,EDoFjB,OAAO;CCnFT;;AjC4CL,MAAM,EAAL,SAAS,EAAE,KAAK;;EiC3DrB,AAkBmB,UAlBT,EAkBN,AAAA,EAAC,EAAI,UAAU,AAAd,EAAe;IACsB,OAAO,EAAC,KAAM;GACnD;;;AjCuCD,MAAM,EAAL,SAAS,EAAE,KAAK;;EiC3DrB,AAAA,UAAU,CAsBD,AAAA,KAAC,EAAO,QAAQ,AAAf,EAAgB;IAAC,GAAG,EAAC,gBAAiB;GAAG;;;AjCkD/C,MAAM,EAAL,SAAS,EAAE,QAAQ;;EiCxExB,AAAA,UAAU,CAAA;IAyBF,MAAM,EAAC,KAAM;IXhBjB,sBAAsB,EWiBS,KAAK;IXhBpC,uBAAuB,EWgBQ,KAAK;IXHpC,0BAA0B,EWIQ,KAAK;IXHvC,yBAAyB,EWGS,KAAK;IACnC,QAAQ,EAAC,MAAO;GAYvB;;;AjCgCG,MAAM,EAAL,SAAS,EAAE,QAAQ;;EiCxExB,AAAA,UAAU,CA+BD,AAAA,KAAC,EAAO,QAAQ,AAAf,EAAgB;IACd,QAAQ,EAAC,gBAAiB;IAC1B,GAAG,EAAC,eAAgB;IACpB,IAAI,EAAC,CAAE;IACP,KAAK,EAAC,CAAE;IACR,UAAU,EAAC,KAAM;IACjB,OAAO,EAAC,GAAI;GACf;;;;ACvCT,AACI,SADK,CACL,EAAE,CAAA;EACE,MAAM,EAAC,CAAE;EACT,OAAO,EAAC,CAAE;CACb;;;AAJL,AAKI,SALK,CAKL,EAAE,EALN,AAKQ,SALC,CAKD,EAAE,CAAA;EACF,UAAU,EAAC,IAAK;EAChB,SAAS,EAAC,MAAO;EACjB,KAAK,EAAC,KAAM;CACf;;;AATL,AAUI,SAVK,CAUL,EAAE,CAAA;EACE,OAAO,EAAE,YAAa;EACtB,MAAM,EAAE,YAAa;EACrB,OAAO,EAAE,CAAE;CA8Dd;;;AA3EL,AAcQ,SAdC,CAUL,EAAE,CAIE,CAAC,CAAA;EACG,QAAQ,EAAE,QAAS;EACnB,OAAO,EAAE,YAAa;EACtB,MAAM,EAAE,IAAK;EACb,WAAW,EAAE,IAAK;EAClB,OAAO,EAAE,aAAc;EACvB,aAAa,EAAE,WAAY;EAC3B,eAAe,EAAE,IAAK;EACtB,kBAAkB,EAAE,GAAI;EACxB,UAAU,EAAE,GAAI;CA8BnB;;;AArDT,AAcQ,SAdC,CAUL,EAAE,CAIE,CAAC,AAWI,OAAO,EAzBpB,AAcQ,SAdC,CAUL,EAAE,CAIE,CAAC,AAWc,MAAM,CAAA;EACb,QAAQ,EAAE,QAAS;EACnB,OAAO,EAAE,EAAG;CACf;;;AA5Bb,AAcQ,SAdC,CAUL,EAAE,CAIE,CAAC,AAeI,OAAO,CAAA;EACJ,GAAG,EAAE,CAAE;EACP,IAAI,EAAE,KAAM;EACZ,OAAO,EAAE,EAAG;EACZ,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,aAAa,EAAE,GAAI;EACnB,kBAAkB,EAAE,GAAI;EACxB,UAAU,EAAE,GAAI;CACnB;;;AAtCb,AAcQ,SAdC,CAUL,EAAE,CAIE,CAAC,AAyBI,MAAM,CAAA;EACH,GAAG,EAAE,GAAI;EACT,IAAI,EAAE,IAAK;EACX,OAAO,EAAE,CAAE;EACX,OAAO,EAAE,KAAM;EACf,KAAK,EAAE,GAAI;EACX,MAAM,EAAE,GAAI;EACZ,UAAU,EAAE,IAAK;EACjB,gBAAgB,EAAE,KAAM;EACxB,aAAa,EAAE,IAAK;CACvB;;;AAjDb,AAcQ,SAdC,CAUL,EAAE,CAIE,CAAC,AAoCI,MAAM,CAAA;EAClB,gBAAgB,EpCfP,OAAO;CoCgBhB;;;AApDD,AAuD0B,SAvDjB,CAUL,EAAE,AA6CG,UAAW,CAAA,IAAI,EAAE,CAAC,CAAA;EACf,UAAU,EHrDN,OAAO;CGuDd;;;AA1DT,AAuD0B,SAvDjB,CAUL,EAAE,AA6CG,UAAW,CAAA,IAAI,EAAE,CAAC,AAEd,OAAO,CAAA;EAAC,UAAU,EHtDf,OAAO;CGsDiB;;;AAzDxC,AA2D0B,SA3DjB,CAUL,EAAE,AAiDG,UAAW,CAAA,IAAI,EAAE,CAAC,CAAA;EACf,UAAU,EHvDN,OAAO;CGyDd;;;AA9DT,AA2D0B,SA3DjB,CAUL,EAAE,AAiDG,UAAW,CAAA,IAAI,EAAE,CAAC,AAEd,OAAO,CAAA;EAAC,UAAU,EHxDf,OAAO;CGwDmB;;;AA7D1C,AA+D0B,SA/DjB,CAUL,EAAE,AAqDG,UAAW,CAAA,IAAI,EAAE,CAAC,CAAA;EACf,UAAU,EH5DN,OAAO;CG8Dd;;;AAlET,AA+D0B,SA/DjB,CAUL,EAAE,AAqDG,UAAW,CAAA,IAAI,EAAE,CAAC,AAEd,OAAO,CAAA;EAAC,UAAU,EH7Df,OAAO;CG6DiB;;;AAjExC,AAmE0B,SAnEjB,CAUL,EAAE,AAyDG,UAAW,CAAA,IAAI,EAAE,CAAC,CAAA;EACf,UAAU,EH9DN,OAAO;CGgEd;;;AAtET,AAmE0B,SAnEjB,CAUL,EAAE,AAyDG,UAAW,CAAA,IAAI,EAAE,CAAC,AAEd,OAAO,CAAA;EAAC,UAAU,EH/Df,OAAO;CG+DkB;;;AArEzC,AAuEQ,SAvEC,CAUL,EAAE,CA6DE,IAAI,CAAC;EtCiBT,aAAa,EAAE,QAAS;EACxB,WAAW,EAAE,MAAO;EACpB,QAAQ,EAAC,MAAO;EAChB,KAAK,EsCnBqB,KAAK;EACvB,KAAK,EAAC,OAAQ;CACjB;;;AAGT,AAAA,YAAY,CAAA;EZ9CR,sBAAsB,EY+CM,GAAG;EZ9C/B,yBAAyB,EY8CG,GAAG;EZ7D/B,uBAAuB,EY8DM,GAAG;EZ7DhC,0BAA0B,EY6DG,GAAG;EAChC,QAAQ,EAAC,MAAO;CAcnB;;;AAjBD,AAIkB,YAJN,EAIR,AAAA,KAAC,EAAO,MAAM,AAAb,EAAc;EAAC,OAAO,EAAC,GAAI;CAAG;;;AAJnC,AAKc,YALF,EAKR,AAAA,SAAC,AAAA,EAAU;EACH,SAAS,EAAE,IAAK;EACxB,aAAa,EAAE,IAAK;CACnB;;;AARL,AASI,YATQ,CASR,CAAC,CAAA;EAAC,KAAK,EAAC,KAAM;CAAG;;;AATrB,AAUI,YAVQ,CAUR,SAAS,CAAC;EAAC,UAAU,EHpFT,OAAO;CGoFY;;;AAVnC,AAWI,YAXQ,CAWR,WAAW,CAAC;EAAC,UAAU,EHnFX,OAAO;CGmFgB;;;AAXvC,AAYI,YAZQ,CAYR,SAAS,CAAC;EAAC,UAAU,EHrFT,OAAO;CGqFY;;;AAZnC,AAaI,YAbQ,CAaR,UAAU,CAAC;EAAC,UAAU,EHpFV,OAAO;CGoFc;;AlC9BjC,MAAM,EAAL,SAAS,EAAE,KAAK;;EkCiBrB,AAAA,YAAY,CAAA;IAeJ,UAAU,EAAC,IAAK;GAEvB;;;;AACD,AAAA,OAAO,CAAA;EACH,QAAQ,EAAC,QAAS;EZtFlB,sBAAsB,EYuFK,IAAI;EZtF/B,uBAAuB,EYsFI,IAAI;EZzE/B,0BAA0B,EY0EI,IAAI;EZzElC,yBAAyB,EYyEK,IAAI;EAClC,UAAU,EH9FE,OAAO;EG+FnB,KAAK,EAAC,KAAM;CAiBf;;;AAtBD,AAAA,OAAO,AAMF,OAAO,CAAA;EACJ,OAAO,EAAC,EAAG;EACX,GAAG,EAAE,KAAM;EACX,QAAQ,EAAE,QAAS;EACnB,OAAO,EAAE,KAAM;EACf,KAAK,EAAE,GAAI;EACX,MAAM,EAAE,GAAI;EACZ,YAAY,EAAE,KAAM;EACpB,YAAY,EAAE,eAAgB;EAC9B,YAAY,EAAE,WAAW,CAAC,WAAW,CAAC,WAAW,CHzGzC,OAAO;EG0Gf,IAAI,EAAE,KAAM;CACf;;AlCvCD,MAAM,EAAL,SAAS,EAAE,QAAQ;;EkCsBxB,AAAA,OAAO,CAAA;IAmBC,UAAU,EAAC,KAAM;IACjB,aAAa,EAAE,IAAK;GAE3B;;;;AAED,AAAA,SAAS,CAAA;EACL,iBAAiB,EAAC,SAAU;EAC5B,gBAAgB,EAAC,WAAY;EAC7B,eAAe,EAAC,KAAM;EACtB,qBAAqB,EAAE,KAAM;CAqBhC;;;AAnBG,AANJ,IAMQ,CAAA,AAAA,KAAC,EAAO,KAAK,AAAZ,EANT,SAAS,CAMe;EAChB,gBAAgB,EAA4C,4CAAC;EAC7D,mBAAmB,EAAC,QAAS;EAC7B,MAAM,EAAC,SAAU;CACpB;;;AAVL,AAAA,SAAS,AAWJ,WAAW,CAXhB,SAAS,CAWS;EACV,gBAAgB,EAAwB,wBAAC;EACzC,mBAAmB,EAAC,aAAc;EAClC,MAAM,EAAC,SAAU;CACpB;;;AAfL,AAiBkB,SAjBT,EAiBL,AAAA,KAAC,EAAO,MAAM,AAAb,EAAc;EAAC,OAAO,EAAC,OAAQ;CAAG;;;AAjBvC,AAAA,SAAS,AAkBJ,OAAO,EAlBZ,AAAA,SAAS,AAkBK,MAAM,CAAA;EFXhB,OAAO,EAAC,EAAG;EACX,MAAM,EEWuB,MAAK;EFVlC,MAAM,EEU8B,CAAC;EFTrC,KAAK,EESkC,IAAI;EFR3C,OAAO,EAAE,KAAM;EACf,UAAU,EAAE,iIAAe;CEQ1B;;;AApBL,AAqBI,SArBK,CAqBL,CAAC,CAAC;EACE,KAAK,EAAC,KAAM;EACZ,WAAW,EAAC,IAAK;CACpB;;AAEL,WAAW;AACX;;;;;;;;GAQG;;AAKH,AAAA,WAAW,CAAA;EACP,OAAO,EAAC,GAAI;CACf;;;AAEG,AADJ,UACc,CADd,aAAa,CACG;EACR,OAAO,EAAC,CAAE;EACV,MAAM,EAAE,KAAM;EACd,QAAQ,EAAE,MAAO;CACpB;;ACvKL,sDAAsD;AnC4DlD,MAAM,EAAL,SAAS,EAAE,KAAK;;EmC3DrB,AAAO,IAAH,GAAG,IAAI,CAAA;IAC2B,UAAU,EAAC,OAAQ;GACxD;;;;AAED,AACI,KADC,CACD,IAAI,CAAA;EACC,aAAa,EAAE,KAAM;EAClB,cAAc,EAAE,GAAI;CAC3B;;AACD,MAAM,CAAN,MAAM,MAAM,SAAS,EAAE,KAAK;;EALhC,AAAA,KAAK,CAAC;IAMM,UAAU,EAAE,IAAK;GAc5B;;;AnCgDG,MAAM,EAAL,SAAS,EAAE,QAAQ;;EmCpExB,AAAA,KAAK,CAAC;IASM,UAAU,EAAE,IAAK;GAW5B;;;AnCmCG,MAAM,EAAL,SAAS,EAAE,KAAK;;EmCvDrB,AAAA,KAAK,CAAC;IAYM,UAAU,EAAE,IAAK;GAQ5B;;;AnCmCG,MAAM,EAAL,SAAS,EAAE,KAAK;;EmCvDrB,AAAA,KAAK,CAAC;IAeM,UAAU,EAAE,IAAK;GAK5B;;EAJW,AAAQ,KAAH,CAhBjB,KAAK,CAgBe,OAAO,CAAA;IACX,aAAa,EAAC,KAAM;GACvB",
	"names": []
}